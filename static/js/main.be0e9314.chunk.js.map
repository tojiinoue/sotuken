{"version":3,"sources":["logo.svg","contract/config.jsx","contract/network.js","contract/contracts.jsx","pages/navbar/Modal_change_network.jsx","pages/navbar/navbar.jsx","contract/images/metamask-icon.svg","contract/images/blocto-icon.svg","contract/login.jsx","pages/user_page/component/history_simple.jsx","pages/user_page/component/history_list.jsx","pages/user_page/component/change_user.jsx","pages/user_page/component/user_card.jsx","pages/user_page/user_page.jsx","pages/create_quiz/components/answer_form1.jsx","pages/create_quiz/components/answer_form2.jsx","pages/create_quiz/components/answer_select.jsx","contract/wait_Modal.jsx","pages/create_quiz/create_quiz.jsx","pages/list_quiz/components/quiz_simple.jsx","pages/list_quiz/components/quiz_list.jsx","pages/list_quiz/list_quiz_top.jsx","pages/answer_quiz/answer_quiz.jsx","pages/admin_page/components/add_student.jsx","pages/admin_page/components/add_teacher.jsx","pages/admin_page/components/view_results.jsx","pages/admin_page/admin.jsx","pages/edit_list/components/quiz_simple.jsx","pages/edit_list/components/quiz_list.jsx","pages/edit_list/edit_list_top.jsx","pages/edit_quiz/edit_quiz.jsx","pages/investment_page/investment_page.jsx","App.js","reportWebVitals.js","index.js"],"names":["quiz_address","token_address","amoy","id","name","network","iconUrl","iconBackground","nativeCurrency","decimals","symbol","rpcUrls","default","http","ethereum","window","homeUrl","process","walletClient","createWalletClient","chain","transport","custom","publicClient","createPublicClient","token_abi","token_contract","abi","quiz_abi","quiz_contract","token","getContract","address","quiz","quizStatus","on","location","reload","Contracts_MetaMask","get_chain_id","getChainId","add_token_wallet","request","method","params","type","options","change_network","switchChain","e","code","console","log","this","add_network","addChain","get_token_balance","balance","read","balanceOf","args","Number","err","get_address","requestAddresses","get_token_history","start","end","account","res","i","push","get_user_history","get_user_history_len","get_user_data","get_user","approve","amount","simulateContract","functionName","writeContract","investment_to_quiz","answer","isNotPayingOut","numOfStudent","isNotAddingReward","students","res2","hash","hash2","is_not_paying_out","is_not_adding_reward","approval","allowance","_investment_to_quiz","waitForTransactionReceipt","addreses","sliceByNumber","array","number","length","Math","ceil","Array","fill","map","_","slice","_payment_of_reward","reward","get_quiz_simple","_addingReward","_adding_reward","document","href","toString","create_quiz","title","explanation","thumbnail_url","content","answer_type","answer_data","correct","reply_startline","reply_deadline","correct_limit","setShow","_create_quiz","logs","topics","dateStartObj","Date","dateEndObj","epochStartSeconds","floor","getTime","epochEndSeconds","edit_quiz","owner","_edit_quiz","create_answer","setContent","_save_answer","_post_answer","get_quiz_all_data","get_quiz","answer_typr","get_quiz_answer_type","get_confirm_answer","get_is_payment","get_quiz_all_data_list","get_quiz_list","quizData","status","get_quiz_length","get_num_of_students","add_student","add_teacher","get_teachers","get_teacher_all","get_results","get_student_results","isTeacher","_isTeacher","get_only_student_results","sort","a","b","get_rank","result","results","get_respondentCount_and_respondentLimit","get_student_answer_hash","student","get_student_list","get_student_all","get_students_answer_hash_list","get_data_for_survey_users","get_data_for_survey_quizs","Modal_change_network","props","chain_id","_jsx","_Fragment","children","class","style","_jsxs","color","position","top","left","transform","onClick","cont","create_col1","className","Nav_menu","_defs","_polygon","_polygon2","_polygon3","_polygon4","_polygon5","_polygon6","_polygon7","_polygon8","_polygon9","_polygon10","_polygon11","_polygon12","_polygon13","_polygon14","_polygon15","_polygon16","_polygon17","_polygon18","_polygon19","_polygon20","_polygon21","_polygon22","_polygon23","_polygon24","_polygon25","_polygon26","_polygon27","_polygon28","_polygon29","useing_address","Set_useing_address","useState","setChain_id","setIsTeacher","useEffect","async","get_variable","display","justifyContent","width","Navbar","fixed","bg","alignItems","Nav","Item","Link","eventKey","home","AiOutlineUnorderedList","size","MdOutlineQuiz","AiOutlineUser","prop","RiFileSettingsLine","_extends","Object","assign","bind","n","arguments","t","r","hasOwnProperty","call","apply","SvgMetamaskIcon","_ref","svgRef","titleId","xmlns","viewBox","ref","undefined","points","ForwardRef","Login","currentAccount","setCurrentAccount","use_wallet","setUse_wallet","Wallet_select","ListGroup","accounts","connect_MetamaskHandler","as","MetaMaskLogo","height","Badge","pill","Convert_time","seconds","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","convertSeconds2ToHours","Simple_history","history","margin","padding","_owner","_sender","AiOutlineArrowRight","_recipient","_value","textAlign","epoch_time","_explanation","History_list","add_num","useRef","innerHeight","Set_history_list","history_list","get_history_list","add_history_list","now_sum","current","now_numRef","now_history_list","observer","IntersectionObserver","entries","entry","isIntersecting","root","rootMargin","threshold","targetElement","targetRef","observe","unobserve","Change_user","User_card","SetName","user_name","image_url","SetImage_url","icons","nameError","SetNameError","state","Setstate","Button","variant","marginTop","num_of_student","rank","User_page","useParams","SetIcons","Setuser_name","SetResult","Set_token","Set_state","setRank","setNum_of_student","history_sum","Set_history_sum","image","then","data","index","Answer_area1","set","value","rows","split","onChange","event","target","variable","indexOf","check_box","variable1","set1","checked","scope","filter","ans_","del_answer","ImCross","Answer_area2","SetContent","pattern","SetPattern","example","SetExample","collect","SetCollect","error_exsample","SetError_Exsample","error_collect","SetError_Collect","handle_Test_pattern","target_set","RegExp","test","Answer_select","component","setComponent","handleClick","setAnswer_type","Wait_Modal","showFlag","to","Create_quiz","setTitle","setExplanation","setThumbnail_url","setAnswer_data","setCorrect","setReply_startline","toLocaleString","timeZone","replace","setReply_deadline","getLocalizedDateTimeString","days","setDate","setReward","Contract","setCorrect_limit","setState","now","setnow","show","convertFullWidthNumbersToHalf","diff","charCodeAt","text","m","String","fromCharCode","padStart","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","get_contract","Form","Group","controlId","Label","Control","placeholder","src","MDEditor","defaultValue","min","alert","Time_diff","secondsLimit","secondsStart","isBeforeStartline","date1","date2","date3","epochTime1","epochTime2","epochTime3","elapsedTime","abs","labels","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","convertSecondsToHours","parseInt","limit","Simple_quiz","isreward","setIsreward","ispayment","setIspayment","cardStatusClass","useLocation","search","pathname","back_page","textDecoration","whiteSpace","fontSize","lineHeight","Quiz_list","add_quiz_list","filterStatus","now_quiz_list","Set_quiz_list","quiz_list","List_quiz_top","quiz_sum","Set_quiz_sum","Set_add_num","setFilter","handleFilterChange","Select","Show_correct","Answer_type1","setAnswer","Answer_type2","Answer_quiz","is_correct_show","setIs_correct_show","getCorrectLimitAndCorrectCount","setQuiz","simple_quiz","setSimple_quiz","Markdown","source","Add_students","addStudent","setAddStudent","addStudent_list","setAddStudent_list","item","Add_teacher","addteacher","setAddTeacher","teachers","setTeachers","getCurrentDateTime","Create_csvlink","CSVLink","filename","View_result","contract","setResults","data_for_survey_users","setData_for_survey_users","data_for_survey_quizs","setData_for_survey_quizs","usersData","setUsersData","quizsData","setQuizsData","csvdownloader","setCsvdownloader","get_data_for_survey","handle_export_csv","users_data","keys","user","create_quiz_count","answer_count","quizs_data","respondent_count","Admin_page","isteacher","setisteacher","is_teacher","is_payment","setIs_payment","marginLeft","marginRight","Edit_list_top","get_quiz_lenght","set_is_teacher","Edit_quiz","setId","setOwner","Investment_to_quiz","setAmount","setIsNotPayingOut","setNumOfStudent","setIsNotAddingReward","setStudents","handleOptionChange","adding_reward","get_students","App","BrowserRouter","basename","Routes","Route","path","element","url","List_quiz","Edit_list","Investment_page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.be0e9314.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//const chainId = \"0x13881\"; // (required) chainId to be used\n//const rpc = \"https://rpc-mumbai.maticvigil.com/\"; // (required for Ethereum) JSON RPC endpoint\n\nconst chainId = \"0x13882\"; // (required) chainId to be used\nconst rpc = \"https://rpc-amoy.polygon.technology/\"; // (required for Ethereum) JSON RPC endpoint\n\n//const quiz_address = \"0xB80f73B6be80f39b30bd8624368cDd57E0db3ff5\";\n//const token_address = \"0x1ceA098E584e46c7659f8460d3c13Cec2D0B22F4\";\n\n//const quiz_address = \"0x681913855E68BBF88962A40E4f3f48cB78fc9603\";\n//const quiz_address = \"0x0427f1452FDB4372C007f4a272cB3c05D73355a0\";20240828コメントアウト\nconst quiz_address = \"0x0427f1452FDB4372C007f4a272cB3c05D73355a0\";\nconst token_address = \"0x4147aE2cEC45cFb2B9a9A3aE320C855DD767C2f8\";\n\nexport { chainId, rpc, quiz_address, token_address };\n","export const amoy = {\n    id: 80002,\n    name: \"Amoy\",\n    network: \"Polygon Pos Amoy\",\n    iconUrl: \"\",\n    iconBackground: \"#000000\",\n    nativeCurrency: {\n        decimals: 18,\n        name: \"MATIC\",\n        symbol: \"MATIC\",\n    },\n    rpcUrls: {\n        default: {\n            http: [\"https://rpc-amoy.polygon.technology/\"],\n            // public rpc url\n        },\n    },\n};\n","import { createPublicClient, createWalletClient, http, getContract, parseAbiItem, custom, UnauthorizedProviderError, decodeFunctionResult } from \"viem\";\nimport token_contract from \"./token_abi.json\";\nimport quiz_contract from \"./quiz_abi.json\";\nimport { chainId, rpc, quiz_address, token_address } from \"./config\";\nimport { amoy } from \"./network\";\n//import { Status } from \"discord.js\";\n\nconst { ethereum } = window;\nconst homeUrl = process.env.PUBLIC_URL;\n\nconst walletClient = createWalletClient({\n    chain: amoy,\n    transport: custom(window.ethereum),\n});\n\nconst publicClient = createPublicClient({\n    chain: amoy,\n    transport: http(),\n});\n\nconst token_abi = token_contract.abi;\nconst quiz_abi = quiz_contract.abi;\n\nconst token = getContract({\n    address: token_address,\n    abi: token_abi,\n    walletClient,\n    publicClient,\n});\n\nconst quiz = getContract({\n    address: quiz_address,\n    abi: quiz_abi,\n    walletClient,\n    publicClient,\n});\n\nconst QuizStatuses = {\n    ALL: null,          // 全てのクイズを表示\n    UNANSWERED: 0,      // 未回答\n    INCORRECT: 1,       // 不正解\n    CORRECT: 2          // 正解\n};\n\n// フィルタリング条件を設定する変数\nlet quizStatus = QuizStatuses.ALL; // 初期値は全てのクイズを表示\n\n// ユーザーがフィルタリングオプションを選択した際に、quizStatusを更新する\n// 例: 未回答のクイズのみを表示する\nquizStatus = QuizStatuses.UNANSWERED;\n\nif (window.ethereum) {\n    window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n    });\n    window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n    });\n}\n\nconst sliceByNumber = (array, number) => {\n    // 元の配列(今回で言うと変数arrayを指します)を基に、分割して生成する配列の個数を取得する処理です。\n    // 今回は元の配列の要素数が10個、分割して生成する配列は2つの要素を持つことを期待しています。\n    // 上記のことから今回は、元の配列から5つの配列に分割されることになります。\n    const length = Math.ceil(array.length / number);\n\n    // new Arrayの引数に上記で取得した配列の個数を渡します。これで配列の中に5つの配列が生成されます。\n    // 5つの配列分だけループ処理(mapメソッド)をします。map処理の中でsliceメソッドを使用して、元の配列から新しい配列を作成して返却します。\n    // sliceメソッドの中では、要素数2つの配列を生成します。\n    // fillメソッドはインデックスのキーを生成するために使用しています。もし使用しない場合はmapメソッドはindexがないため、mapメソッドが機能しません。\n    return new Array(length)\n        .fill()\n        .map((_, i) => array.slice(i * number, (i + 1) * number));\n};\n\nclass Contracts_MetaMask {\n    async get_chain_id() {\n        return await walletClient.getChainId();\n    }\n    async add_token_wallet() {\n        await window.ethereum.request({\n            method: \"wallet_watchAsset\",\n            params: {\n                type: \"ERC20\",\n                options: {\n                    address: token_address,\n                    symbol: \"Trial\",\n                    decimals: 18,\n                },\n            },\n        });\n    }\n\n    async change_network() {\n        try {\n            await walletClient.switchChain({ id: amoy.id });\n        } catch (e) {\n            //userがrejectした場合\n            if (e.code === 4001) {\n                console.log(e);\n            } else {\n                this.add_network();\n            }\n        }\n    }\n    async add_network() {\n        try {\n            await walletClient.addChain({ chain: amoy });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async get_token_balance(address) {\n        try {\n            if (ethereum) {\n                console.log(token_address);\n                const balance = await token.read.balanceOf({ args: [address] });\n                console.log(balance);\n                console.log(Number(balance) / 10 ** 18);\n                //16進数を10進数に変換\n                return Number(balance) / 10 ** 18;\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_address() {\n        try {\n            if (ethereum) {\n                return (await walletClient.requestAddresses())[0];\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_token_history(address, start, end) {\n        console.log(address, start, end);\n        let account = await this.get_address();\n        try {\n            if (ethereum) {\n                console.log(token_address);\n                //取得したクイズを格納する配列\n                let res = [];\n\n                console.log(start, end);\n                if (start <= end) {\n                    for (let i = start; i < end; i++) {\n                        res.push(await token.read.get_user_history({ account, args: [address, i] }));\n                    }\n                } else {\n                    //console.log(\"33\");\n                    for (let i = start - 1; i >= end; i--) {\n                        res.push(await token.read.get_user_history({ account, args: [address, i] }));\n                    }\n                }\n\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_user_history_len(address) {\n        console.log(token_address);\n        let account = await this.get_address();\n        const res = await token.read.get_user_history_len({ account, args: [address] });\n        return Number(res);\n    }\n\n    //ユーザーのデータを取得する\n    async get_user_data(address) {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                console.log(token_address);\n                const res = await quiz.read.get_user({ account, args: [address] });\n                return [res[0], res[1], Number(res[2]), res[3]];\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async approve(account, amount) {\n        try {\n            if (ethereum) {\n                console.log(amount);\n                try {\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: token_address,\n                        abi: token_abi,\n                        functionName: \"approve\",\n                        args: [quiz_address, amount],\n                    });\n                    console.log(\"成功\");\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async investment_to_quiz(id, amount, answer, isNotPayingOut, numOfStudent, isNotAddingReward, students) {\n        console.log([id, amount, isNotPayingOut, numOfStudent, isNotAddingReward]);\n        let res = null;\n        let res2 = null;\n        let hash = null;\n        let hash2 = null;\n        let is_not_paying_out = null;\n        let is_not_adding_reward = null;\n        amount = Number(amount) * 10 ** 18;\n\n        if (isNotPayingOut === \"false\") {\n            is_not_paying_out = false;\n        } else {\n            is_not_paying_out = true;\n        }\n        if (isNotAddingReward === \"false\") {\n            is_not_adding_reward = false;\n        } else {\n            is_not_adding_reward = true;\n        }\n\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let approval = await token.read.allowance({ account, args: [account, quiz_address] });\n                console.log(Number(approval));\n                console.log(amount * numOfStudent);\n\n                if (Number(approval) >= Number(amount * numOfStudent)) {\n                    hash = await this._investment_to_quiz(account, id, amount, numOfStudent);\n                    if (hash) {\n                        res = await publicClient.waitForTransactionReceipt({ hash });\n                    }\n                } else {\n                    hash = await this.approve(account, amount * numOfStudent);\n                    if (hash) {\n                        res = await publicClient.waitForTransactionReceipt({ hash });\n                        hash = await this._investment_to_quiz(account, id, amount, numOfStudent);\n                        console.log(hash);\n                        if (hash) {\n                            res = await publicClient.waitForTransactionReceipt({ hash });\n                        }\n                    }\n                }\n\n                if (is_not_paying_out == false) {\n                    let addreses = sliceByNumber(students, 15);\n                    console.log(addreses)\n                    for (let i = 0; i < addreses.length; i++) {\n                        hash2 = await this._payment_of_reward(account, id, answer, addreses[i]);\n                        if (hash) {\n                            res2 = await publicClient.waitForTransactionReceipt({ hash });\n                        }\n                    }\n                    if (is_not_adding_reward == false) {\n                        let reward = (await this.get_quiz_simple(id))[7];\n                        console.log(reward);\n                        approval = await token.read.allowance({ account, args: [account, quiz_address] });\n                        console.log(approval);\n                        if (Number(approval) >= Number(reward)) {\n                            hash = await this._addingReward(account, id, reward);\n                            if (hash) {\n                                res = await publicClient.waitForTransactionReceipt({ hash });\n                            }\n                        } else {\n                            hash = await this.approve(account, reward);\n                            if (hash) {\n                                res = res = await publicClient.waitForTransactionReceipt({ hash });\n                                hash = await this._adding_reward(account, id, reward);\n                                if (hash) {\n                                    res = await publicClient.waitForTransactionReceipt({ hash });\n                                }\n                            }\n                        }\n                    }\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        document.location.href = homeUrl + \"/edit_list\";\n    }\n\n    async _investment_to_quiz(account, id, amount, numOfStudent) {\n        console.log([account, id, amount, numOfStudent])\n        try {\n            if (ethereum) {\n                //console.log(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, epochStartSeconds, epochEndSeconds, reward, correct_limit);\n                try {\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: quiz_address,\n                        abi: quiz_abi,\n                        functionName: \"investment_to_quiz\",\n                        args: [id, amount.toString(), numOfStudent],\n                    });\n\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async _payment_of_reward(account, id, answer, students) {\n        console.log([account, id, answer, students]);\n        try {\n            if (ethereum) {\n                try {\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: quiz_address,\n                        abi: quiz_abi,\n                        functionName: \"payment_of_reward\",\n                        args: [id, answer, students],\n                    });\n\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async _adding_reward(account, id, reward) {\n        console.log([account, id, reward]);\n        try {\n            if (ethereum) {\n                try {\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: quiz_address,\n                        abi: quiz_abi,\n                        functionName: \"adding_reward\",\n                        args: [id],\n                    });\n\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async create_quiz(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit, setShow) {\n        setShow(true);\n        //console.log([title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit]);\n        let res = null;\n        let hash = null;\n        reward = reward * 10 ** 18;\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let approval = await token.read.allowance({ account, args: [account, quiz_address] });\n\n                if (Number(approval) >= Number(reward * correct_limit)) {\n                    hash = await this._create_quiz(account, title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit);\n                    if (hash) {\n                        res = await publicClient.waitForTransactionReceipt({ hash });\n                    }\n                } else {\n                    hash = await this.approve(account, reward * correct_limit);\n                    if (hash) {\n                        res = await publicClient.waitForTransactionReceipt({ hash });\n                        hash = await this._create_quiz(account, title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit);\n                        console.log(hash);\n                        if (hash) {\n                            res = await publicClient.waitForTransactionReceipt({ hash });\n                        }\n                    }\n                }\n                console.log(\"create_quiz_cont\");\n            } else {\n                setShow(false);\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            setShow(false);\n            console.log(err);\n        }\n        document.location.href = homeUrl + \"/answer_quiz/\" + res.logs[2].topics[2];\n    }\n\n    async _create_quiz(account, title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit) {\n        const dateStartObj = new Date(reply_startline);\n        const dateEndObj = new Date(reply_deadline);\n\n        // Date オブジェクトをエポック秒に変換する\n        const epochStartSeconds = Math.floor(dateStartObj.getTime() / 1000);\n        const epochEndSeconds = Math.floor(dateEndObj.getTime() / 1000);\n        try {\n            if (ethereum) {\n                //console.log(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, epochStartSeconds, epochEndSeconds, reward, correct_limit);\n                console.log(answer_type);\n                try {\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: quiz_address,\n                        abi: quiz_abi,\n                        functionName: \"create_quiz\",\n                        args: [title, explanation, thumbnail_url, content, answer_type, answer_data.toString(), correct, epochStartSeconds, epochEndSeconds, reward, correct_limit],\n                        //args: [\"a\", \"a\", \"a\", \"a\", 1, \"a\", \"a\", epochStartSeconds, epochEndSeconds, 2, 2],\n                    });\n\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async edit_quiz(id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline, setShow) {\n        setShow(true);\n        //console.log([id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline]);\n        let res = null;\n        let hash = null;\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let approval = await token.read.allowance({ account, args: [account, quiz_address] });\n\n                hash = await this._edit_quiz(account, id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline);\n                console.log(hash);\n                if (hash) {\n                    res = await publicClient.waitForTransactionReceipt({ hash });\n                }\n                console.log(res);\n\n                console.log(\"create_quiz_cont\");\n            } else {\n                setShow(false);\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            setShow(false);\n            console.log(err);\n        }\n        document.location.href = homeUrl + \"/edit_list\";\n    }\n\n    async _edit_quiz(account, id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline) {\n        const dateStartObj = new Date(reply_startline);\n        const dateEndObj = new Date(reply_deadline);\n\n        // Date オブジェクトをエポック秒に変換する\n        const epochStartSeconds = Math.floor(dateStartObj.getTime() / 1000);\n        const epochEndSeconds = Math.floor(dateEndObj.getTime() / 1000);\n        try {\n            if (ethereum) {\n                //console.log(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, epochStartSeconds, epochEndSeconds, reward, correct_limit);\n\n                try {\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: quiz_address,\n                        abi: quiz_abi,\n                        functionName: \"edit_quiz\",\n                        args: [id, owner, title, explanation, thumbnail_url, content, epochStartSeconds, epochEndSeconds],\n                        //args: [\"a\", \"a\", \"a\", \"a\", 1, \"a\", \"a\", epochStartSeconds, epochEndSeconds, 2, 2],\n                    });\n\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async create_answer(id, answer, setShow, setContent) {\n        console.log(id, answer);\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n\n                setShow(true);\n                setContent(\"書き込み中...\");\n                let hash = await this._save_answer(account, id, answer);\n\n                if (hash) {\n                    // const res1 = await quiz.read.post_answer_view({account,args:[id, answer.toString()]})\n                    // console.log(res1);\n                    // if (res1 == true) {\n                    //     setContent(\"正解です！待機すると、マイページに遷移します\");\n                    // }\n                    // else {\n                    //     setContent(\"不正解です。待機すると、マイページに遷移します\");\n                    // }\n                    let res = await publicClient.waitForTransactionReceipt({ hash });\n                    console.log(res);\n                    //document.location.href = \"/user_page/\" + account;\n                    document.location.href = homeUrl + \"/list_quiz\";\n                }\n                console.log(\"create_answer_cont\");\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        setShow(false);\n    }\n\n    async _save_answer(account, id, answer) {\n        try {\n            const { request } = await publicClient.simulateContract({\n                account,\n                address: quiz_address,\n                abi: quiz_abi,\n                functionName: \"save_answer\",\n                args: [id, answer.toString()],\n            });\n            console.log(\"正常そう\");\n            return await walletClient.writeContract(request);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async _post_answer(account, id, answer) {\n        try {\n            const { request } = await publicClient.simulateContract({\n                account,\n                address: quiz_address,\n                abi: quiz_abi,\n                functionName: \"post_answer\",\n                args: [id, answer.toString()],\n            });\n            console.log(\"正常そう\");\n            return await walletClient.writeContract(request);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async get_quiz_all_data(id) {\n        return await quiz.read.get_quiz_all_data({ args: [id] });\n    }\n\n    async get_quiz(id) {\n        const answer_typr = await quiz.read.get_quiz_answer_type({ args: [id] });\n        const res = await quiz.read.get_quiz({ args: [id] });\n        const res2 = await this.get_confirm_answer(id);\n        return [...res, answer_typr, ...res2];\n    }\n\n    async get_quiz_simple(id) {\n        return await quiz.read.get_quiz_simple({ args: [id] });\n    }\n\n    async get_is_payment(id) {\n        return await quiz.read.get_is_payment({ args: [id] });\n    }\n\n    async get_confirm_answer(id) {\n        return await quiz.read.get_confirm_answer({ args: [id] });\n    }\n\n    async get_quiz_all_data_list(start, end) {\n        //取得したクイズを格納する配列\n        let res = [];\n        let account = await this.get_address();\n\n        console.log(start, end);\n        if (start <= end) {\n            for (let i = start; i < end; i++) {\n                console.log(i);\n                res.push(await quiz.read.get_quiz_all_data({ account, args: [i] }));\n                console.log(res);\n            }\n        } else {\n            for (let i = start - 1; i >= end; i--) {\n                console.log(i);\n                res.push(await quiz.read.get_quiz_all_data({ account, args: [i] }));\n                console.log(res);\n            }\n        }\n        return res;\n    }\n\n    //startからendまでのクイズを取得\n\n    async get_quiz_list(start, end) {\n        let res = [];\n        let account = await this.get_address();\n    \n        console.log(start, end, quizStatus);\n        if (start <= end) {\n            for (let i = start; i < end; i++) {\n                console.log(i);\n                let quizData = await quiz.read.get_quiz_simple({ account, args: [i] });\n                // ステータスが指定されている場合、クイズのステータスでフィルタリング\n                if (quizStatus === null || quizData.status === quizStatus) {\n                    res.push(quizData);\n                }\n                console.log(res);\n            }\n        } else {\n            for (let i = start - 1; i >= end; i--) {\n                console.log(i);\n                let quizData = await quiz.read.get_quiz_simple({ account, args: [i] });\n                if (quizStatus === null || quizData.status === quizStatus) {\n                    res.push(quizData);\n                }\n                console.log(res);\n            }\n        }\n        return res;\n    }\n    \n    async get_quiz_length() {\n        return await quiz.read.get_quiz_length();\n    }\n\n    async get_num_of_students() {\n        return Number(await quiz.read.get_num_of_students());\n    }\n\n    async add_student(address) {\n        console.log(address);\n        try {\n            if (ethereum) {\n                try {\n                    let account = await this.get_address();\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: quiz_address,\n                        abi: quiz_abi,\n                        functionName: \"add_student\",\n                        args: [address],\n                    });\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async add_teacher(address) {\n        try {\n            if (ethereum) {\n                try {\n                    let account = await this.get_address();\n                    const { request } = await publicClient.simulateContract({\n                        account,\n                        address: quiz_address,\n                        abi: quiz_abi,\n                        functionName: \"add_teacher\",\n                        args: [address],\n                    });\n                    return await walletClient.writeContract(request);\n                } catch (e) {\n                    console.log(e);\n                }\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_teachers() {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                return await quiz.read.get_teacher_all({ account, args: [] });\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_results() {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let res = await quiz.read.get_student_results({ account, args: [] });\n                console.log(res);\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async isTeacher() {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                return await quiz.read._isTeacher({ account, args: [] });\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_only_student_results() {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let res = await quiz.read.get_only_student_results({ account, args: [] });\n                console.log(res);\n                for (let i = 0; i < res.length; i++) {\n                    res[i] = Number(res[i]);\n                }\n                await res.sort(function (a, b) {\n                    return b - a;\n                });\n                console.log(res);\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exist\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_rank(result) {\n        try {\n            if (ethereum) {\n                let results = await this.get_only_student_results();\n                for (let i = 0; i < results.length; i++) {\n                    if (result == results[i]) return i + 1;\n                }\n            } else {\n                console.log(\"Ethereum object does not exists\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_respondentCount_and_respondentLimit(id) {\n        return await quiz.read.get_respondentCount_and_respondentLimit({ args: [id] });\n    }\n    //ここから変更\n    async get_student_answer_hash(student, id) {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let res = await quiz.read.get_student_answer_hash({ account, args: [student, id] });\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exists\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    async get_student_list() {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let res = await quiz.read.get_student_all({ account, args: [] });\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exists\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async get_students_answer_hash_list(students, id) {\n        try {\n            if (ethereum) {\n                let res = {};\n                console.log(students[1]);\n                for (let i = 0; i < students.length; i++) {\n                    res[students[i]] = await this.get_student_answer_hash(students[i], id);\n                }\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exists\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    //ここまで変更\n\n    async get_data_for_survey_users() {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let res = await quiz.read.get_data_for_survey_users({ account, args: [] });\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exists\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    async get_data_for_survey_quizs() {\n        try {\n            if (ethereum) {\n                let account = await this.get_address();\n                let res = await quiz.read.get_data_for_survey_quizs({ account, args: [] });\n                return res;\n            } else {\n                console.log(\"Ethereum object does not exists\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n}\n\nexport { Contracts_MetaMask };","import { useEffect, useState } from \"react\";\n\nconst Modal_change_network = (props) => {\n    if (props.chain_id) {\n        return (\n            <>\n                {props.chain_id != 80002 ? ( // showFlagがtrueだったらModalを表示する\n                    <div id=\"overlay\" class=\"stars\" style={{}}>\n                        <div\n                            id=\"modalContent\"\n                            style={{\n                                color: \"white\",\n                                position: \"fixed\",\n                                top: \"50%\" /* 要素の上端を画面の中央に */,\n                                left: \"50%\",\n                                transform: \"translate(-50%, -50%)\",\n                            }}\n                        >\n                            {/* 文字を白くする */}\n                            <h2>私たちの利用するamoyに接続してください</h2>\n                            <br />\n                            <button\n                                type=\"button\"\n                                class=\"btn btn-dark\"\n                                onClick={() => {\n                                    props.cont.change_network();\n                                }}\n                            >\n                                Change Network\n                            </button>\n                        </div>\n                    </div>\n                ) : (\n                    <></> // showFlagがfalseの場合はModalは表示しない\n                )}\n            </>\n        );\n    } else {\n        return <></>;\n    }\n};\n\nexport default Modal_change_network;\n","import { useEffect, useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport \"./navbar.css\";\nimport { AiFillPropertySafety, AiOutlineUser } from \"react-icons/ai\";\nimport { MdOutlineQuiz } from \"react-icons/md\";\nimport { RiFileSettingsLine } from \"react-icons/ri\";\nimport { AiOutlineUnorderedList } from \"react-icons/ai\";\nimport { BrowserRouter as Router, Route, NavLink, Switch } from \"react-router-dom\";\nimport { AiFillHome, AiFillSetting, AiFillStar } from \"react-icons/ai\";\nimport { Contracts_MetaMask } from \"../../contract/contracts\";\nimport Modal_change_network from \"./Modal_change_network\";\n\nfunction create_col1() {\n    return (\n        <div className=\"col-1\"></div>\n    );\n}\n\nfunction create_edit_button(prop) {\n    return (\n        <div className=\"col-3\">\n            <Nav.Item>\n                <Nav.Link eventKey=\"edit\" href={prop + \"/edit_list\"}>\n                    <div className=\"col-12\">\n                        <RiFileSettingsLine size={30} />\n                    </div>\n                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                        <font size=\"2\">テストの編集</font>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n        </div>\n    );\n}\n\nfunction Nav_menu(props) {\n    const [useing_address, Set_useing_address] = useState(null);\n    const [chain_id, setChain_id] = useState(null);\n    const [isTeacher, setIsTeacher] = useState(false);\n\n    useEffect(() => {\n        //非同期処理をUseEffect内で行う場合は、async/awaitを使用する\n        const get_variable = async () => {\n            setChain_id(await props.cont.get_chain_id());\n            Set_useing_address(await props.cont.get_address());\n            setIsTeacher(await props.cont.isTeacher());\n        };\n\n        get_variable();\n    }, []);\n    console.log(isTeacher);\n    return (\n        <>\n            <Modal_change_network chain_id={chain_id} cont={props.cont} />\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n                <Navbar\n                    fixed=\"bottom\"\n                    bg=\"light\"\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div className=\"row justify-content-bitween\">\n                        <div className=\"col-3\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"list_quiz\" href={props.home + \"/list_quiz\"}>\n                                    <div className=\"col-12 \">\n                                        <AiOutlineUnorderedList size={30} />\n                                    </div>\n                                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                                        <font size=\"2\">一覧</font>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </div>\n                        {!isTeacher ? create_col1() : \"\"}\n                        <div className=\"col-3\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"create_quiz\" href={props.home + \"/create_quiz\"}>\n                                    <div className=\"col-12 \">\n                                        <MdOutlineQuiz size={30} />\n                                    </div>\n                                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                                        <font size=\"2\">出題</font>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </div>\n                        {!isTeacher ? create_col1() : \"\"}\n                        <div className=\"col-3\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"user_page\" href={props.home + \"/user_page/\" + useing_address}>\n                                    <div className=\"col-12\">\n                                        <AiOutlineUser size={30} />\n                                    </div>\n                                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                                        <font size=\"2\">myPage</font>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </div>\n                        {isTeacher ? create_edit_button(props.home) : \"\"}\n                    </div>\n                </Navbar>\n            </div>\n        </>\n    );\n}\nexport default Nav_menu;\n","var _defs, _polygon, _polygon2, _polygon3, _polygon4, _polygon5, _polygon6, _polygon7, _polygon8, _polygon9, _polygon10, _polygon11, _polygon12, _polygon13, _polygon14, _polygon15, _polygon16, _polygon17, _polygon18, _polygon19, _polygon20, _polygon21, _polygon22, _polygon23, _polygon24, _polygon25, _polygon26, _polygon27, _polygon28, _polygon29;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMetamaskIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 507.83 470.86\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".a{fill:#e2761b;stroke:#e2761b;}.a,.b,.c,.d,.e,.f,.g,.h,.i,.j{stroke-linecap:round;stroke-linejoin:round;}.b{fill:#e4761b;stroke:#e4761b;}.c{fill:#d7c1b3;stroke:#d7c1b3;}.d{fill:#233447;stroke:#233447;}.e{fill:#cd6116;stroke:#cd6116;}.f{fill:#e4751f;stroke:#e4751f;}.g{fill:#f6851b;stroke:#f6851b;}.h{fill:#c0ad9e;stroke:#c0ad9e;}.i{fill:#161616;stroke:#161616;}.j{fill:#763d16;stroke:#763d16;}\"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"metamask\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"a\",\n    points: \"482.09 0.5 284.32 147.38 320.9 60.72 482.09 0.5\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"b\",\n    points: \"25.54 0.5 221.72 148.77 186.93 60.72 25.54 0.5\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"b\",\n    points: \"410.93 340.97 358.26 421.67 470.96 452.67 503.36 342.76 410.93 340.97\"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"b\",\n    points: \"4.67 342.76 36.87 452.67 149.57 421.67 96.9 340.97 4.67 342.76\"\n  })), _polygon5 || (_polygon5 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"b\",\n    points: \"143.21 204.62 111.8 252.13 223.7 257.1 219.73 136.85 143.21 204.62\"\n  })), _polygon6 || (_polygon6 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"b\",\n    points: \"364.42 204.62 286.91 135.46 284.32 257.1 396.03 252.13 364.42 204.62\"\n  })), _polygon7 || (_polygon7 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"b\",\n    points: \"149.57 421.67 216.75 388.87 158.71 343.55 149.57 421.67\"\n  })), _polygon8 || (_polygon8 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"b\",\n    points: \"290.88 388.87 358.26 421.67 348.92 343.55 290.88 388.87\"\n  })), _polygon9 || (_polygon9 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"c\",\n    points: \"358.26 421.67 290.88 388.87 296.25 432.8 295.65 451.28 358.26 421.67\"\n  })), _polygon10 || (_polygon10 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"c\",\n    points: \"149.57 421.67 212.18 451.28 211.78 432.8 216.75 388.87 149.57 421.67\"\n  })), _polygon11 || (_polygon11 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"d\",\n    points: \"213.17 314.54 157.12 298.04 196.67 279.95 213.17 314.54\"\n  })), _polygon12 || (_polygon12 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"d\",\n    points: \"294.46 314.54 310.96 279.95 350.71 298.04 294.46 314.54\"\n  })), _polygon13 || (_polygon13 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"e\",\n    points: \"149.57 421.67 159.11 340.97 96.9 342.76 149.57 421.67\"\n  })), _polygon14 || (_polygon14 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"e\",\n    points: \"348.72 340.97 358.26 421.67 410.93 342.76 348.72 340.97\"\n  })), _polygon15 || (_polygon15 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"e\",\n    points: \"396.03 252.13 284.32 257.1 294.66 314.54 311.16 279.95 350.91 298.04 396.03 252.13\"\n  })), _polygon16 || (_polygon16 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"e\",\n    points: \"157.12 298.04 196.87 279.95 213.17 314.54 223.7 257.1 111.8 252.13 157.12 298.04\"\n  })), _polygon17 || (_polygon17 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"f\",\n    points: \"111.8 252.13 158.71 343.55 157.12 298.04 111.8 252.13\"\n  })), _polygon18 || (_polygon18 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"f\",\n    points: \"350.91 298.04 348.92 343.55 396.03 252.13 350.91 298.04\"\n  })), _polygon19 || (_polygon19 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"f\",\n    points: \"223.7 257.1 213.17 314.54 226.29 382.31 229.27 293.07 223.7 257.1\"\n  })), _polygon20 || (_polygon20 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"f\",\n    points: \"284.32 257.1 278.96 292.87 281.34 382.31 294.66 314.54 284.32 257.1\"\n  })), _polygon21 || (_polygon21 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"g\",\n    points: \"294.66 314.54 281.34 382.31 290.88 388.87 348.92 343.55 350.91 298.04 294.66 314.54\"\n  })), _polygon22 || (_polygon22 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"g\",\n    points: \"157.12 298.04 158.71 343.55 216.75 388.87 226.29 382.31 213.17 314.54 157.12 298.04\"\n  })), _polygon23 || (_polygon23 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"h\",\n    points: \"295.65 451.28 296.25 432.8 291.28 428.42 216.35 428.42 211.78 432.8 212.18 451.28 149.57 421.67 171.43 439.55 215.75 470.36 291.88 470.36 336.4 439.55 358.26 421.67 295.65 451.28\"\n  })), _polygon24 || (_polygon24 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"i\",\n    points: \"290.88 388.87 281.34 382.31 226.29 382.31 216.75 388.87 211.78 432.8 216.35 428.42 291.28 428.42 296.25 432.8 290.88 388.87\"\n  })), _polygon25 || (_polygon25 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"j\",\n    points: \"490.44 156.92 507.33 75.83 482.09 0.5 290.88 142.41 364.42 204.62 468.37 235.03 491.43 208.2 481.49 201.05 497.39 186.54 485.07 177 500.97 164.87 490.44 156.92\"\n  })), _polygon26 || (_polygon26 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"j\",\n    points: \"0.5 75.83 17.39 156.92 6.66 164.87 22.56 177 10.44 186.54 26.34 201.05 16.4 208.2 39.26 235.03 143.21 204.62 216.75 142.41 25.54 0.5 0.5 75.83\"\n  })), _polygon27 || (_polygon27 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"g\",\n    points: \"468.37 235.03 364.42 204.62 396.03 252.13 348.92 343.55 410.93 342.76 503.36 342.76 468.37 235.03\"\n  })), _polygon28 || (_polygon28 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"g\",\n    points: \"143.21 204.62 39.26 235.03 4.67 342.76 96.9 342.76 158.71 343.55 111.8 252.13 143.21 204.62\"\n  })), _polygon29 || (_polygon29 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"g\",\n    points: \"284.32 257.1 290.88 142.41 321.1 60.72 186.93 60.72 216.75 142.41 223.7 257.1 226.09 293.27 226.29 382.31 281.34 382.31 281.74 293.27 284.32 257.1\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMetamaskIcon);\nexport default __webpack_public_path__ + \"static/media/metamask-icon.b3649ecf.svg\";\nexport { ForwardRef as ReactComponent };","var _defs, _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBloctoIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"_\\\\u5716\\\\u5C64_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 243.12 302.69\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#07f;}.cls-2{fill:#14aaff;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-2\",\n    d: \"M130.56,77.58c-28.45,0-56.22,10.97-76.98,30.43-22.77,21.35-37.18,52.88-45.44,82.54C2.73,209.95,.02,230.08,.02,250.23c0,6.09,.25,12.13,.73,18.1,.59,7.26,7.66,12.29,14.7,10.39,6.14-1.65,12.6-2.54,19.26-2.54,13.68,0,26.5,3.72,37.49,10.22,.27,.16,.53,.32,.8,.47,17.86,10.65,38.93,16.5,61.4,15.75,58.61-1.94,106.49-49.63,108.65-108.23,2.36-64.11-48.9-116.82-112.48-116.82Zm0,163.99c-28.41,0-51.44-23.03-51.44-51.43s23.03-51.44,51.44-51.44,51.44,23.03,51.44,51.44-23.03,51.43-51.44,51.43Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M84.28,42.14h0c0,14.83-7.77,28.59-20.53,36.15-8.01,4.75-15.52,10.36-22.32,16.75-15.09,14.14-26.35,31.49-34.69,48.69C5.09,147.11,0,145.91,0,142.15V42.14C0,18.87,18.87,0,42.14,0h0c23.27,0,42.14,18.87,42.14,42.14Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBloctoIcon);\nexport default __webpack_public_path__ + \"static/media/blocto-icon.ff8c029b.svg\";\nexport { ForwardRef as ReactComponent };","import { ethers } from \"ethers\";\n\nimport { BiLogIn } from \"react-icons/bi\";\nimport { chainId, rpc, bloctoSDK, quiz_address, token_address } from \"./config\";\nimport { useState } from \"react\";\nimport { ReactComponent as MetaMaskLogo } from \"./images/metamask-icon.svg\";\nimport { ReactComponent as BloctoLogo } from \"./images/blocto-icon.svg\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"./login.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\n//import BloctoSDK from \"@blocto/sdk\";\nconst { ethereum } = window;\n\nfunction Login() {\n    const [currentAccount, setCurrentAccount] = useState(true);\n    const [use_wallet, setUse_wallet] = useState(\"\");\n    const connect_MetamaskHandler = async () => {\n        const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n        console.log(\"Found an account! Address: \", accounts[0]);\n        setCurrentAccount(accounts[0]);\n        setUse_wallet(\"MetaMask\");\n    };\n\n    const Wallet_select = () => {\n        return (\n            <>\n                <h1>Connect Your Wallet</h1>\n                <ListGroup>\n                    <div\n                        onClick={() => {\n                            connect_MetamaskHandler();\n                        }}\n                    >\n                        <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\">\n                            <MetaMaskLogo style={{ width: \"36px\", height: \"36px\", fill: \"blue\" }} />\n                            MetaMask\n                            <Badge bg=\"primary\" pill>\n                                Popular\n                            </Badge>\n                        </ListGroup.Item>\n                    </div>\n                </ListGroup>\n            </>\n        );\n    };\n    return (\n        <div className=\"container\">\n            <Wallet_select />\n        </div>\n    );\n}\n\nexport default Login;\n","import {useState} from \"react\";\n\nimport {AiOutlineArrowRight} from \"react-icons/ai\";\nfunction Convert_time(props) {\n    function convertSeconds2ToHours(seconds) {\n        console.log(seconds);\n\n        const date = new Date(seconds * 1000); // 1つ目のDateオブジェクト\n\n        return date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n    }\n    return <>{convertSeconds2ToHours(props.seconds)}</>;\n}\n\nfunction Simple_history(props) {\n    console.log(props.history);\n    return (\n        // <Link to={\"/answer_quiz/\"+props.quiz[0].toNumber()} style={{ color: '#000' ,textDecoration: 'none'}}>\n\n        //q:文字を左寄せにした\n        //a:style={{textAlign: \"left\"}}\n        <div className=\"transaction_card\" style={{\"min-height\": \"100px\"}}>\n            <div className=\"row\" style={{margin: \"0\", padding: \"0\"}}>\n                <div className=\"transfer row\">\n                    <div className=\"col-5 left\" style={{padding: \"0\", margin: \"0\", \"text-align\": \"center\"}}>\n                        <div>from</div>\n                        <div>{props.history._owner.slice(0, 12)}</div>\n                        <div>recipient</div>\n                        <div>{props.history._sender.slice(0, 12)}</div>\n                    </div>\n\n                    <div className=\"col-2 center\" style={{padding: \"0\"}}>\n                        <AiOutlineArrowRight />\n                    </div>\n                    <div className=\"col-5 right\" style={{padding: \"0\"}}>\n                        <div>to</div>\n                        <div>{props.history._recipient.slice(0, 12)}</div>\n                        <div>{Number(props.history._value) / 10 ** 18}FLT</div>\n                    </div>\n                </div>\n\n                <div className=\"transfer_time\" style={{padding: \"0\", \"padding-top\": \"10px\", margin: \"0\", textAlign: \"left\"}}>\n                    <Convert_time seconds={Number(props.history.epoch_time)} />\n                </div>\n                <div className=\"reason\" style={{padding: \"0\", \"padding-top\": \"10px\", margin: \"0\", textAlign: \"left\"}}>\n                    {props.history._explanation}\n                    <br />\n                </div>\n            </div>\n        </div>\n        // </Link>\n    );\n}\nexport default Simple_history;","import Form from \"react-bootstrap/Form\";\nimport {useState, useEffect, useRef} from \"react\";\nimport MDEditor, {selectWord} from \"@uiw/react-md-editor\";\nimport {resolvePath, useParams} from \"react-router-dom\";\nimport Simple_history from \"./history_simple\";\nimport {Link} from \"react-router-dom\";\nfunction History_list(props) {\n    //1回の更新で追加で表示する個数\n    //画面を満たす個数を計算して、add_numに代入\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\n\n    const history_list = props.history_list;\n    const Set_history_list = props.Set_history_list;\n\n    //クイズのリストを取得\n    const get_history_list = async (now_sum) => {\n        //追加分のクイズ用のリスト\n        let add_history_list = [];\n\n        //クイズの総数を超えていたら\n\n        if (now_sum - add_num.current < 0) {\n            //now_numからquiz_numまでのクイズを取得\n            add_history_list = await props.cont.get_token_history(props.address, now_sum, 0);\n            //now_numを0にする\n            props.now_numRef.current = 0;\n        } else {\n            //クイズの総数を超えていなかったら\n            //now_numからnow_num+add_numまでのクイズを取得\n\n            add_history_list = await props.cont.get_token_history(props.address, now_sum, now_sum - add_num.current);\n            //now_numをnow_num+add_numにする\n            props.now_numRef.current = now_sum - add_num.current;\n        }\n        //new_quiz_listをmapで展開して、quiz_listに追加\n        let now_history_list = [];\n\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\n\n        console.log(add_history_list);\n        add_history_list.map((history) => {\n            now_history_list.push(<Simple_history history={history} />); //DOMとして追加\n        });\n        Set_history_list((history_list) => [...history_list, ...now_history_list]);\n    };\n\n    const options = {\n        root: null, // ビューポートをルートとする\n        rootMargin: \"-10px\", // ビューポートに対するマージン\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n        for (const entry of entries) {\n            if (entry.isIntersecting) {\n                // ターゲット要素がビューポートに入った時の処理\n                //console.log(\"ターゲット要素がビューポートに入りました。\");\n                get_history_list(props.now_numRef.current);\n            } else {\n                // ターゲット要素がビューポートから出た時の処理\n                //console.log(\"ターゲット要素がビューポートから出ました。\");\n            }\n        }\n    }, options);\n\n    useEffect(() => {\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\n        if (targetElement) {\n            observer.observe(targetElement); // ターゲット要素をobserve\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\n            if (targetElement.isIntersecting) {\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\n                get_history_list(props.now_numRef.current);\n            }\n        }\n        return () => {\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\n        };\n    }, []); // []を指定して初期状態のみで実行されるようにする\n}\nexport default History_list;\n","import React, {useState, useEffect} from \"react\";\nimport \"./change_user.css\";\n\nfunction Change_user({show, setShow}) {\n    const closeModal = () => {\n        setShow(false);\n        // ブラウザの履歴に新しいエントリを追加\n    };\n\n    const overridePopstate = () => {\n        console.log(\"aaa\");\n\n        closeModal();\n    };\n\n    useEffect(() => {\n        // 現在の履歴情報を取得\n    }, []);\n\n    if (show) {\n        console.log(\"show\");\n        return (\n            <div id=\"overlay\" onClick={closeModal}>\n                aaaa\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nexport default Change_user;\n","import { useState, useEffect } from \"react\";\n\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\nimport Change_user from \"./change_user\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction User_card(props) {\n    const [name, SetName] = useState(props.user_name);\n    const [image_url, SetImage_url] = useState(props.icons);\n    const [nameError, SetNameError] = useState(\"\");\n    const [state, Setstate] = useState(\"\");\n\n    const update_handler = () => {\n        console.log(\"update_handler\");\n        console.log(name);\n        console.log(image_url);\n        if (nameError == false) {\n            props.cont.update_user_data(name, image_url);\n        } else {\n            Setstate(false);\n        }\n    };\n    const handle_SetName = (event) => {\n        const value = event.target.value;\n        SetName(value);\n\n        // 電話番号の正規表現パターン\n        const phonePattern = /^\\d{2}[a-zA-Z]\\d{4}$/;\n\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\n        if (!phonePattern.test(value)) {\n            SetNameError(true);\n            console.log(\"errr\");\n        } else {\n            SetNameError(false);\n        }\n    };\n    //初回のみ実行\n    useEffect(() => {\n        console.log(\"初回のみ実行\");\n        console.log(props.state);\n        console.log(props.user_name);\n        console.log(props.icons);\n        Setstate(props.state);\n    }, []);\n\n    if (true) {\n        return (\n            <>\n                <div className=\"user_card\">\n                    {/* q:左上に表示 */}\n\n                    {/* <Button variant=\"primary\" onClick={() => Setstate(false)} style={{ position: 'absolute', top: 0, left: 0 }}>\n                        更新\n                    </Button> */}\n                    {/* <img\n                        src={props.icons}\n                        alt=\"\"\n                        style={{\n                            width: `75px`,\n                            height: `75px`,\n                            borderRadius: '50%',\n                        }}\n                    /> */}\n                    {/* <div className=\"user_name\">{props.user_name}</div> */}\n                    <Button variant=\"primary\" onClick={() => props.cont.add_token_wallet()} style={{ position: \"absolute\", top: 0, left: 0 }}>\n                        トークンをwalletに追加\n                    </Button>\n                    <div className=\"address\" style={{ \"margin-top\": \"50px\" }}>\n                        {props.address.slice(0, 20)}....\n                    </div>\n\n                    {/* マージンを設定 */}\n                    <div className=\"row\" style={{ marginTop: \"20px\" }}>\n                        <div className=\"col token d-flex flex-column\">\n                            <div>保有トークン</div>\n                            <div>{props.token}FLT</div>\n                        </div>\n                        <div className=\"col token-result d-flex flex-column\">\n                            <div>現在の順位</div>\n                            <div>{props.num_of_student}人中{props.rank}位</div>\n                        </div>\n                        <div className=\"col token-result d-flex flex-column\">\n                            <div>獲得点数</div>\n                            <div>{Number(props.result)/40}点</div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"user_card\">\n                    <Button variant=\"primary\" onClick={() => Setstate(true)} style={{ position: \"absolute\", top: 0, left: 0 }}>\n                        <>キャンセル</>\n                    </Button>\n                    <div style={{ \"margin-top\": \"30px\" }}>\n                        <Form onSubmit={update_handler}>\n                            <div className=\"icon_image\">\n                                <Form.Group className=\"mb-3\" controlId=\"form_image_url\" style={{ textAlign: \"left\" }}>\n                                    <Form.Label>アイコン</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"image_url\" value={image_url} onChange={(event) => SetImage_url(event.target.value)} />\n                                </Form.Group>\n                            </div>\n                            <img src={image_url} alt=\"\" style={{ width: `75px`, height: `75px`, borderRadius: \"50%\" }} />\n\n                            <div className=\"user_name\">\n                                {nameError && <p style={{ color: \"red\" }}>入力形式が間違っています</p>}\n                                <Form.Group className=\"mb-3\" controlId=\"form_name\" style={{ textAlign: \"left\" }}>\n                                    <Form.Label>User_Name 例:22P5000</Form.Label>\n                                    <Form.Control type=\"name\" placeholder=\"Enter Name\" value={name} onChange={handle_SetName} />\n                                </Form.Group>\n                            </div>\n                            <Button variant=\"primary\" onClick={update_handler} style={{ marginTop: \"20px\" }}>\n                                <>更新</>\n                            </Button>\n                        </Form>\n                    </div>\n                    <div className=\"address\">{props.address.slice(0, 20)}</div>\n                    <div className=\"row\" style={{ marginTop: \"20px\" }}>\n                        <div className=\"col token d-flex flex-column\">\n                            <div>保有トークン</div>\n                            <div>{props.token}FLT</div>\n                        </div>\n                        <div className=\"col token-result d-flex flex-column\">\n                            <div>授業での配点</div>\n                            <div>{Number(props.result)/40}点</div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\nexport default User_card;","import {Contracts_MetaMask} from \"../../contract/contracts\";\nimport {useState, useEffect, useRef} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Login from \"../../contract/login\";\n//cssをimport\nimport \"./user_page.css\";\nimport History_list from \"./component/history_list\";\nimport User_card from \"./component/user_card\";\nimport {icons} from \"react-icons/lib\";\n\nfunction User_page() {\n    const {address} = useParams();\n\n    //User_cardへの表示用\n    const [icons, SetIcons] = useState(null);\n    const [user_name, Setuser_name] = useState(null);\n\n    const [result, SetResult] = useState(null);\n    const [token, Set_token] = useState(null);\n    const [state, Set_state] = useState(null);\n    const [rank, setRank] = useState(null);\n    const [num_of_student, setNum_of_student] = useState(null); \n    //クイズの総数\n    const [history_sum, Set_history_sum] = useState(null);\n    //現在表示している個数を保持するref\n    const now_numRef = useRef(0);\n    const targetRef = useRef(null); // ターゲット要素のrefを作成\n\n    let cont = new Contracts_MetaMask();\n    const [history_list, Set_history_list] = useState([]);\n\n    const get_variable = async () => {\n        Set_token(await cont.get_token_balance(address));\n        let [user_name, image, result, state] = await cont.get_user_data(address);\n        console.log(user_name, image, state);\n        Setuser_name(user_name);\n        SetIcons(image);\n        SetResult(result / 10 ** 18);\n        setRank(await cont.get_rank(result));\n        setNum_of_student(await cont.get_num_of_students());\n        Set_state(state);\n\n        cont.get_user_history_len(address).then((data) => {\n            // Promise オブジェクトが解決された後の処理を記述\n            console.log(Number(data));\n            Set_history_sum(Number(data));\n            now_numRef.current = Number(data);\n        });\n    };\n\n    //初回のみ実行\n    useEffect(() => {\n        get_variable();\n    }, []);\n\n    if (history_sum != null) {\n        return (\n            <div className=\"mypage\">\n                <User_card address={address} icons={icons} user_name={user_name} token={token} result={result} state={state} rank={rank} num_of_student={num_of_student} cont={cont} />\n                <History_list cont={cont} history_sum={history_sum} Set_history_sum={Set_history_sum} history_list={history_list} Set_history_list={Set_history_list} targetRef={targetRef} now_numRef={now_numRef} address={address} />\n\n                <div className=\"token-history\">\n                    <div className=\"title\">Token History</div>\n                    <div className=\"timeline\">\n                        {history_list.map((history, index) => {\n                            // console.log(quiz);\n                            return <>{history}</>;\n                        })}\n                    </div>\n                    <div ref={targetRef}>\n                        {/* ターゲット要素aの内容 */}\n                        now_loading\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <></>;\n    }\n}\n\nexport default User_page;\n","import Button from \"react-bootstrap/Button\";\nimport {useState, useEffect} from \"react\";\nimport {ImCross} from \"react-icons/im\";\nfunction Answer_area1(props) {\n    const [content, setContent] = useState(\"\");\n\n    //初回のみ実行\n    useEffect(() => {\n        props.set([]);\n    }, []);\n    function add_answer() {\n        console.log(props.variable.indexOf(content));\n        if (props.variable.indexOf(content) === -1) {\n            props.set([...props.variable, content]);\n            console.log(content);\n\n            console.log(\"add_answer\");\n        }\n        setContent(\"\");\n    }\n    function del_answer(cont) {\n        for (let i = 0; i < props.variable.length; i++) {\n            console.log(props.variable[i]);\n        }\n        props.set(props.variable.filter((ans_, index) => ans_ !== cont));\n    }\n    return (\n        //<Textarea name={\"タイトル\"} variable={title} set={setTitle}/>\n        <>\n            <p className=\"text-left\">\n                <font size=\"5\">{props.name}</font>{\" \"}\n            </p>\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    <textarea id=\"textarea\" className=\"form-control\" value={content} rows={content.split(\"\\n\").length} aria-describedby=\"basic-addon1\" onChange={(event) => setContent(event.target.value)} />\n                </div>\n                <div className=\"col-2\">\n                    <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={() => {\n                            add_answer();\n                        }}\n                    >\n                        追加\n                    </Button>\n                </div>\n            </div>\n\n            <table className=\"table\">\n                <tbody>\n                    {props.variable.map((cont) => {\n                        let check_box;\n                        if (props.variable1 === cont) {\n                            check_box = (\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    value={cont}\n                                    id=\"flexCheckChecked\"\n                                    onChange={() => {\n                                        props.set1(cont);\n                                    }}\n                                    checked\n                                />\n                            );\n                        } else {\n                            check_box = (\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    value={cont}\n                                    id=\"flexCheckChecked\"\n                                    onChange={() => {\n                                        props.set1(cont);\n                                    }}\n                                />\n                            );\n                        }\n                        return (\n                            <tr key={cont}>\n                                <th scope=\"col\">{check_box}</th>\n\n                                <th scope=\"col\" className=\"left\">\n                                    {cont}\n                                </th>\n                                <th scope=\"col\">\n                                    <Button\n                                        variant=\"primary btn-sm \"\n                                        type=\"submit\"\n                                        onClick={() => {\n                                            del_answer(cont);\n                                        }}\n                                    >\n                                        <ImCross />\n                                    </Button>\n                                </th>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </>\n    );\n}\nexport default Answer_area1;\n","import Button from \"react-bootstrap/Button\";\nimport {useState, useEffect} from \"react\";\nimport {ImCross} from \"react-icons/im\";\nfunction Answer_area2(props) {\n    const [content, SetContent] = useState(\"\");\n    const [pattern, SetPattern] = useState(\"\");\n    const [example, SetExample] = useState(\"\");\n    const [collect, SetCollect] = useState(\"\");\n    const [error_exsample, SetError_Exsample] = useState(true);\n    const [error_collect, SetError_Collect] = useState(true);\n\n    //初回のみ実行\n    useEffect(() => {\n        props.set([]);\n    }, []);\n    //answer_dataの変更じに実行\n    useEffect(() => {\n        console.log(\"answer_dataの変更じに実行\");\n        console.log(props.variable);\n        props.set([pattern, example]);\n    }, [pattern, example]);\n\n    //正規表現のエラー表示\n    const handle_Test_pattern = (event, target_set) => {\n        const value = event.target.value;\n\n        console.log(pattern);\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\n        if (!new RegExp(pattern).test(value)) {\n            target_set(true);\n            console.log(\"errr\");\n        } else {\n            target_set(false);\n        }\n    };\n\n    return (\n        //<Textarea name={\"タイトル\"} variable={title} set={setTitle}/>\n        <>\n            <p className=\"text-left\">\n                <font size=\"5\">{props.name}</font>{\" \"}\n            </p>\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    正規表現を入力\n                    <input type=\"text\" className=\"form-control\" value={pattern} onChange={(event) => SetPattern(event.target.value)} />\n                    {pattern}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    例を入力\n                    {/* 1行のみのフォームにしたい */}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={example}\n                        onChange={(event) => {\n                            handle_Test_pattern(event, SetError_Exsample);\n                            SetExample(event.target.value);\n                        }}\n                    />\n                    {error_exsample ? \"エラー\" : \"OK\"}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    正解を入力\n                    {/* 1行のみのフォームにしたい */}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={props.variable1}\n                        onChange={(event) => {\n                            handle_Test_pattern(event, SetError_Collect);\n                            props.set1(event.target.value);\n                        }}\n                    />\n                    {error_collect ? \"エラー\" : \"OK\"}\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Answer_area2;\n","import {useState} from \"react\";\nimport Answer_area1 from \"./answer_form1\";\nimport Answer_area2 from \"./answer_form2\";\n\nfunction Answer_select(props) {\n    const [component, setComponent] = useState(\"Component1\");\n\n    const handleClick = (event) => {\n        const {name} = event.target;\n        setComponent(name);\n        if (name === \"Answer_area1\") {\n            props.setAnswer_type(0);\n        } else if (name === \"Answer_area2\") {\n            props.setAnswer_type(1);\n        }\n    };\n\n    if (true) {\n        return (\n            <div>\n                <div className=\"btn-group\" style={{margin: \"20px\"}}>\n                    <button type=\"button\" name=\"Answer_area1\" className=\"btn btn-primary\" onClick={handleClick}>\n                        択一形式\n                    </button>\n                </div>\n                <div className=\"btn-group\" style={{margin: \"20px\"}}>\n                    <button type=\"button\" name=\"Answer_area2\" className=\"btn btn-primary\" onClick={handleClick}>\n                        入力形式\n                    </button>\n                </div>\n\n                {/* name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect}/ */}\n                {component === \"Answer_area1\" && <Answer_area1 name={\"択一形式\"} variable={props.variable} variable1={props.variable1} set={props.set} set1={props.set1} />}\n                {component === \"Answer_area2\" && <Answer_area2 name={\"入力形式\"} variable={props.variable} variable1={props.variable1} set={props.set} set1={props.set1} />}\n            </div>\n        );\n    }\n}\nexport default Answer_select;\n","import React from \"react\";\nimport \"./wait_Modal.css\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nconst Wait_Modal = (props) => {\n    console.log(props.showFlag);\n    return (\n        <>\n            {props.showFlag ? ( // showFlagがtrueだったらModalを表示する\n                <div id=\"overlay\">\n                    <div id=\"modalContent\">\n                        <div className=\"spinner-box\">\n                            <div className=\"pulse-container\">\n                                <div className=\"pulse-bubble pulse-bubble-1\"></div>\n                                <div className=\"pulse-bubble pulse-bubble-2\"></div>\n                                <div className=\"pulse-bubble pulse-bubble-3\"></div>\n                            </div>\n                        </div>\n                        <div>\n                            <p id=\"content\">\n                                {/* <font size=\"5\" color=\"#3f3f3f\">結果を確認したい場合は、待機して下さい</font> */}\n\n                                {props.content ? (\n                                    <font size=\"5\" color=\"#3f3f3f\">\n                                        {props.content}\n                                    </font>\n                                ) : (\n                                    <font size=\"5\" color=\"#3f3f3f\">\n                                        書き込みを実行中です。\n                                    </font>\n                                )}\n                                <br />\n                                <font size=\"5\" color=\"#3f3f3f\">\n                                    待機せずに別のページに遷移しても問題ありません。\n                                </font>\n                                <br />\n                                <Link to=\"/list_quiz\">\n                                    <Button variant=\"primary\" style={{marginTop: \"20px\"}}>\n                                        トップページに戻る\n                                    </Button>\n                                </Link>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <></> // showFlagがfalseの場合はModalは表示しない\n            )}\n        </>\n    );\n};\n\nexport default Wait_Modal;\n","import { Contracts_MetaMask } from \"../../contract/contracts\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState, useEffect } from \"react\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport Answer_select from \"./components/answer_select\";\nimport Button from \"react-bootstrap/Button\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Wait_Modal from \"../../contract/wait_Modal\";\n\nconst { ethereum } = window;\nconst mkdStr = \"\";\n\nfunction Create_quiz() {\n    const [useing_address, Set_useing_address] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [explanation, setExplanation] = useState(\"\");\n    const [thumbnail_url, setThumbnail_url] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [answer_type, setAnswer_type] = useState(0);\n    const [answer_data, setAnswer_data] = useState([]);\n    const [correct, setCorrect] = useState(\"\");\n    const [reply_startline, setReply_startline] = useState(\n        new Date()\n            .toLocaleString(\"ja-JP\", { timeZone: \"Asia/Tokyo\" })\n            .replace(/[/]/g, \"-\")\n            .replace(/\\s(\\d):/, \" 0$1:\"),\n    );\n    const [reply_deadline, setReply_deadline] = useState(getLocalizedDateTimeString(addDays(new Date(), 1)));\n    const [reward, setReward] = useState(0);\n\n    let Contract = new Contracts_MetaMask();\n\n    const [correct_limit, setCorrect_limit] = useState(null);\n    const [state, setState] = useState(\"Null\");\n    const [now, setnow] = useState(null);\n    const [show, setShow] = useState(false);\n\n    const convertFullWidthNumbersToHalf = (() => {\n        // 全角数字と半角数字の差分を計算\n        const diff = \"０\".charCodeAt(0) - \"0\".charCodeAt(0);\n\n        // 置換関数を返す\n        return text => text.replace(\n            /[０-９]/g\n            , m => String.fromCharCode(m.charCodeAt(0) - diff)\n        );\n    })();\n\n    const create_quiz = async () => {\n        //console.log(title, explanation, thumbnail_url, content, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit);\n\n        if (correct !== \"\") {\n            console.log(new Date(reply_startline).getTime(), new Date(reply_deadline).getTime());\n            Contract.create_quiz(title, explanation, thumbnail_url, content, answer_type, answer_data, convertFullWidthNumbersToHalf(correct), reply_startline, reply_deadline, reward, correct_limit, setShow);\n        } else {\n            alert(\"正解を入力してください\");\n        }\n    };\n\n\n\n    function getLocalizedDateTimeString(now = new Date()) {\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const day = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n\n        const formatter = new Intl.DateTimeFormat(\"ja-JP\", {\n            timeZone: \"Asia/Tokyo\",\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: false,\n        });\n\n        const localizedDateTimeString = formatter\n            .format(now)\n            .replace(/\\u200E|\\u200F/g, \"\")\n            .replace(/\\//g, \"-\")\n            .replace(/ /, \"T\");\n\n        return localizedDateTimeString;\n    }\n    function addDays(date, days) {\n        date.setDate(date.getDate() + days);\n        return date;\n    }\n\n    //初回のみ実行\n    useEffect(() => {\n        // let now = new Date();\n        // const diff_time = new Date(now + 100);\n        // setReply_deadline(addDays(now, 5));\n        async function get_contract() {\n            setCorrect_limit((await Contract.get_num_of_students()) + 30);\n        }\n        get_contract();\n        setnow(getLocalizedDateTimeString());\n        // console.log(now);\n        // console.log(new Date().toISOString().slice(0, 16));\n    }, []);\n    console.log(reply_deadline);\n    console.log(reply_startline);\n\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-2\" />\n                <div className=\"col-8\">\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"form_titile\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>タイトル</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter Title\" value={title} onChange={(event) => setTitle(event.target.value)} />\n                        </Form.Group>\n                    </Form>\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                        <Form.Label>説明</Form.Label>\n                        <Form.Control as=\"textarea\" rows={explanation.split(\"\\n\").length + 3} value={explanation} onChange={(event) => setExplanation(event.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                        <Form.Label>サムネイル</Form.Label>\n                        <Form.Control type=\"url\" value={thumbnail_url} onChange={(event) => setThumbnail_url(event.target.value)} />\n                    </Form.Group>\n                    <img src={thumbnail_url} width=\"200\" />\n                    <br />\n\n                    <Form.Group className=\"mb-3\" data-color-mode=\"light\" style={{ textAlign: \"left\" }}>\n                        <Form.Label>内容</Form.Label>\n                        <MDEditor height={500} value={content} onChange={setContent} />\n                    </Form.Group>\n\n                    {/*<Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                        <Form.Label>選択肢(正解の回答にチェックを入れてください)</Form.Label><br />\n                        <Answer_area1 name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect}/>\n                    </Form.Group> */}\n                    <Answer_select name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect} setAnswer_type={setAnswer_type} answer_type={answer_type} />\n\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                        <Form.Label>回答開始日時</Form.Label>\n                        <Form.Control\n                            type=\"datetime-local\"\n                            defaultValue={now}\n                            //value={reply_deadline}\n                            min={now}\n                            onChange={(event) => setReply_startline(new Date(event.target.value))}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                        <Form.Label>回答締切日時</Form.Label>\n                        <Form.Control\n                            type=\"datetime-local\"\n                            defaultValue={reply_deadline}\n                            //value={reply_deadline}\n                            min={now}\n                            onChange={(event) => setReply_deadline(new Date(event.target.value))}\n                        />\n                    </Form.Group>\n                    {/*\n                    <div className=\"row\">\n\n                        <Form.Group className=\"mb-3 col-4\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>報酬</Form.Label>\n                            <Form.Control type=\"number\" min={1} step={1} value={reward} onChange={(event) => setReward(parseInt(event.target.value))} />\n                        </Form.Group>\n                        <div className=\"col-1\" />\n\n                        <Form.Group className=\"mb-3 col-4\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>正解の上限</Form.Label>\n                            <Form.Control type=\"number\" min={1} step={1} value={correct_limit} onChange={(event) => setCorrect_limit(parseInt(event.target.value))} />\n                        </Form.Group>\n                    </div>\n                    */}\n\n                    <div style={{ textAlign: \"right\" }}>\n                        <Button variant=\"primary\" onClick={() => create_quiz()} style={{ marginTop: \"20px\" }}>\n                            クイズを作成\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"col-2\" />\n            </div>\n\n            <Wait_Modal showFlag={show} />\n        </div>\n    );\n}\n\nexport default Create_quiz;","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Modal from \"./Modal\";\nimport { Link } from \"react-router-dom\";\nimport \"./quiz_simple.css\";\n\nfunction Time_diff(props) {\n    function convertSecondsToHours(secondsLimit, secondsStart) {\n        let isBeforeStartline = false;\n\n        const date1 = new Date(); // 1つ目のDateオブジェクト\n        const date2 = new Date(secondsLimit * 1000); // 2つ目のDateオブジェクト\n        const date3 = new Date(secondsStart * 1000);\n\n        const epochTime1 = Math.floor(date1.getTime() / 1000); // 現在時刻を秒単位のエポック時間に変換\n        const epochTime2 = Math.floor(date2.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\n        const epochTime3 = Math.floor(date3.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\n        // console.log(\"/////\");\n        // console.log(date2,seconds);\n        // console.log( epochTime1 , epochTime2,epochTime1 - epochTime2); // タイムリミットと現在時刻の差を表示\n        // console.log(date1.toISOString());\n        // console.log(date2.toISOString());\n        // console.log(\"////\")\n\n        let elapsedTime = 0;\n\n        if (epochTime1 < epochTime3) {\n            elapsedTime = Math.floor(Math.abs(epochTime3 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\n            elapsedTime = new Date(elapsedTime * 1000);\n            isBeforeStartline = true;\n        } else {\n            elapsedTime = Math.floor(Math.abs(epochTime2 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\n            elapsedTime = new Date(elapsedTime * 1000);\n        }\n\n        //console.log(elapsedTime);\n\n        const labels = [\"年\", \"ヶ月\", \"日\", \"時間\", \"分\", \"秒\"];\n        let date = [];\n        date.push(elapsedTime.getUTCFullYear() - 1970);\n        date.push(elapsedTime.getUTCMonth());\n        date.push(elapsedTime.getUTCDate() - 1);\n        date.push(elapsedTime.getUTCHours());\n        date.push(elapsedTime.getUTCMinutes());\n        date.push(elapsedTime.getUTCSeconds());\n        let res = \"\";\n        let count = 0;\n        let i = 0;\n\n        for (i = 0; i <= date.length; i++) {\n            //console.log(date[i]);\n            if (date[i] != 0) {\n                //count =i;\n                break;\n            }\n        }\n        for (i; i < date.length; i++) {\n            res += date[i].toString() + labels[i];\n        }\n        if (isBeforeStartline) {\n            return \"回答開始時間まで\" + res;\n        } else {\n            if (epochTime2 - epochTime1 > 0) {\n                return \"締め切りまで \" + res;\n            } else {\n                return \"締切終了\";\n            }\n        }\n    }\n\n    //console.log(parseInt(props.limit[\"_hex\"]));\n    return (\n        <div>\n            {/* {now}<br/>\n            {targetDate}<br/> */}\n            {convertSecondsToHours(parseInt(props.limit), parseInt(props.start))}\n        </div>\n    );\n}\n\nfunction Simple_quiz(props) {\n    const [show, setShow] = useState(false);\n    const [isreward, setIsreward] = useState(true);\n    const [ispayment, setIspayment] = useState(false);\n    useEffect(() => {\n        /*console.log(\"show\", show);*///消した\n        if (Number(props.quiz[7]) == 0) {\n            setIsreward(false);\n        }\n        if (props.quiz[11]) {\n            setIspayment(true);\n            setIsreward(false);\n        }\n    }, []);//[show]→[]に変更\n    /*console.log(Number(props.quiz[7]));\n    console.log(isreward)*///消した\n    const cardStatusClass = Number(props.quiz[10]) === 0 ? 'bg-blue' : '';//追加した\n    const search = useLocation().search;\n    /*console.log(props.quiz);*///消した\n    return (\n        <>\n            {/* <Modal show={show} setShow={setShow} id={props.quiz[0].toNumber()} /> */}\n            <div onClick={() => setShow(true)}>\n                <div className={`quiz_card ${cardStatusClass} ${ispayment == true ? 'border border-danger ' : ''} ${isreward == true ? 'border border-primary' : ''}`}>\n                    <Link to={{ pathname: \"/answer_quiz/\" + Number(props.quiz[0]), state: { back_page: 0 } }} style={{ color: \"black\", textDecoration: \"none\" }}>\n                        <div className=\"row quiz_card_1\">\n                            <div className=\"col-2\">\n                                <img src={props.quiz[4]} className=\"img-fluid\"></img>\n                            </div>\n                            <div className=\"col-10\" style={{ textAlign: \"left\" }}>\n                                <div className=\"row h-20\">\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[2]}</div>\n                                </div>\n                                <div className=\"row h-80\" style={{ whiteSpace: \"pre-wrap\", fontSize: \"14px\", lineHeight: \"1\" }}>\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[3]}</div>\n                                </div>\n                                <div className=\"row h-20\" style={{ fontSize: \"14px\" }}>\n                                    <Time_diff start={Number(props.quiz[5])} limit={Number(props.quiz[6])} />\n                                </div>\n                                <div className=\"d-flex\" style={{ fontSize: \"14px\", lineHeight: \"1\" }}>\n                                    {/* <div className=\"col-4 \">{Date(props.item[4].toNumber() * 1000)}</div> */}\n\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">報酬</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[7]) / (10 ** 18)}FLT\n                                        </div>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">回答者数</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[8])}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">上限</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[9])}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">状態</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[10]) == 0 ? \"未回答\" : Number(props.quiz[10]) == 1 ? \"不正解\" : Number(props.quiz[10]) == 2 ? \"正解\" : \"\"}\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"col-3 \">正解数:{props.quiz[7].toNumber()}</div>\n                            <div className=\"col-3 \">上限:{props.quiz[8].toNumber()}</div>\n                            <div className=\"col-3 \"> 状態:{props.quiz[9].toNumber()}</div> */}\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Simple_quiz;\n","import Form from \"react-bootstrap/Form\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\nimport { resolvePath, useLocation } from \"react-router-dom\";\nimport Simple_quiz from \"./quiz_simple\";\n\nimport { Link } from \"react-router-dom\";\nfunction Quiz_list(props) {\n    const location = useLocation();\n    //画面を満たす個数を計算して、add_numに代入\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\n\n    //表示するクイズのリスト\n    // const [quiz_list,Set_quiz_list] =useState([]);\n\n    /* const quiz_list = props.quiz_list;\n    const Set_quiz_list = props.Set_quiz_list; *///井上絞り込み機能のためにコメントアウト20240828\n\n    //クイズのリストを取得\n    const get_quiz_list = async (now) => {\n        //追加分のクイズ用のリスト\n        let add_quiz_list = [];\n        let filterStatus = props.filter === 'all' ? null : props.filter;//20240828追加\n\n        //クイズの総数を超えていたら\n        if (now - add_num.current < 0) {\n            //now_numからquiz_numまでのクイズを取得\n            add_quiz_list = await props.cont.get_quiz_list(now, 0, filterStatus);//20240828filterStatus\n            //now_numを0にする\n            props.now_numRef.current = 0;\n        } else {\n            //クイズの総数を超えていなかったら\n            //now_numからnow_num+add_numまでのクイズを取得\n            add_quiz_list = await props.cont.get_quiz_list(now, now - add_num.current, filterStatus);//20240828filterStatus\n            //now_numをnow_num+add_numにする\n            props.now_numRef.current = now - add_num.current;\n        }\n        //new_quiz_listをmapで展開して、quiz_listに追加\n        let now_quiz_list = [];\n\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\n        add_quiz_list.map((quiz) => {\n            now_quiz_list.push(<Simple_quiz quiz={quiz} />); //DOMとして追加\n        });\n\n        //quiz_listにnow_quiz_listを追加\n        //console.log([...quiz_list, ...now_quiz_list]);\n        props.Set_quiz_list((quiz_list) => [...quiz_list, ...now_quiz_list]);//props.を追加井上絞り込み機能のために20240828\n    };\n\n    const options = {\n        root: null, // ビューポートをルートとする\n        rootMargin: \"-10px\", // ビューポートに対するマージン\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n        for (const entry of entries) {\n            if (entry.isIntersecting) {\n                // ターゲット要素がビューポートに入った時の処理\n                console.log(\"ターゲット要素がビューポートに入りました。\");\n                get_quiz_list(props.now_numRef.current);\n            } else {\n                // ターゲット要素がビューポートから出た時の処理\n                console.log(\"ターゲット要素がビューポートから出ました。\");\n            }\n        }\n    }, options);\n\n    useEffect(() => {\n        //console.log(location.search);\n\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\n        if (targetElement) {\n            observer.observe(targetElement); // ターゲット要素をobserve\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\n            if (targetElement.isIntersecting) {\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\n                get_quiz_list(props.now_numRef.current);\n            }\n        }\n        return () => {\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\n        };\n\n        //パラメータを取得\n    }, []); // []を指定して初期状態のみで実行されるようにする\n    return null;\n}\nexport default Quiz_list;","import { Contracts_MetaMask } from \"../../contract/contracts\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\nimport { resolvePath, useParams } from \"react-router-dom\";\nimport Simple_quiz from \"./components/quiz_simple\";\nimport Quiz_list from \"./components/quiz_list\";\nimport { Link } from \"react-router-dom\";\n\nfunction List_quiz_top(props) {\n    //クイズのコントラクト\n    let cont = new Contracts_MetaMask();\n\n    const targetRef = useRef(null); // 修正点: targetRefを定義\n\n    //現在表示している個数を保持するref\n    const now_numRef = useRef(0); //保存\n    //クイズの総数\n    const [quiz_sum, Set_quiz_sum] = useState(null); //保存\n\n    //表示するクイズのリスト\n    const [quiz_list, Set_quiz_list] = useState([]); //保存\n    //１回の更新で追加で表示する個数\n    const [add_num, Set_add_num] = useState(7);\n    // フィルタリングの状態を追加\n    const [filter, setFilter] = useState('all'); //井上絞り込み機能のために追加20240828\n    // コンテナのrefを作成\n    const containerRef = useRef(null);\n\n    const callback = (entries, observer) => {\n        entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n                // ターゲットの<div>が画面に表示された場合に実行される関数\n                console.log(\"Target div is visible on the screen!\");\n                // ここに実行したい関数を記述\n\n                // console.log(\"///////\",now_num);\n            }\n        });\n    };\n\n    useEffect(() => {\n        cont.get_quiz_length().then((data) => {\n            // Promise オブジェクトが解決された後の処理を記述\n            console.log(Number(data));\n            let now = parseInt(Number(data));\n            Set_quiz_sum(now);\n            now_numRef.current = now;\n        });\n    }, []);\n    \n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    };//井上絞り込み機能のために追加20240828\n    //const targetRef = useRef(null); // ターゲット要素のrefを作成 井上コメントアウトにした20240828\n\n    if (quiz_sum != null) {\n        return (\n            <>\n                {/* 井上絞り込み機能のために追加20240828 */}\n                <Form.Select value={filter} onChange={handleFilterChange}>\n                    <option value=\"all\">全て</option>\n                    <option value=\"0\">未回答</option>\n                    <option value=\"1\">不正解</option>\n                    <option value=\"2\">正解</option>\n                </Form.Select>\n\n                {/* スクロールを監視するコンポーネント */}\n                <Quiz_list cont={cont} add_num={add_num} Set_add_num={Set_add_num} quiz_sum={quiz_sum} Set_quiz_sum={Set_quiz_sum} quiz_list={quiz_list} Set_quiz_list={Set_quiz_list} targetRef={targetRef} now_numRef={now_numRef} filter={filter} />\n\n                {/* */}\n                {quiz_list.map((quiz, index) => {\n                    if (index !== quiz_list.length - add_num) {\n                        return <>{quiz_list[index]}</>;\n                    }\n                })}\n                <div ref={targetRef}>\n                    {/* ターゲット要素aの内容 */}\n                    now_loading\n                </div>\n            </>\n        );\n    } else {\n        return <></>;\n    }\n}\nexport default List_quiz_top;","import { Contracts_MetaMask } from \"../../contract/contracts\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState, useEffect } from \"react\";\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Wait_Modal from \"../../contract/wait_Modal\";\nimport { ConstructorFragment } from \"ethers/lib/utils\";\nfunction Show_correct(props){\n    if(props.cont == true){\n        return (\n            <a>答えは{props.answer}</a>\n        );\n    }else{\n        return <></>;\n    }\n}\nfunction Answer_type1(props) {\n    return (\n        <>\n            <a>\n                <br />\n                選択式\n            </a>\n            <table className=\"table\">\n                <tbody>\n                    {props.quiz[6].split(\",\").map((cont) => {\n                        let check_box;\n                        if (props.answer == cont) {\n                            check_box = (\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    value={cont}\n                                    id=\"flexCheckChecked\"\n                                    onChange={() => {\n                                        props.setAnswer(cont);\n                                    }}\n                                    checked\n                                />\n                            );\n                        } else {\n                            check_box = (\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    value={cont}\n                                    id=\"flexCheckChecked\"\n                                    onChange={() => {\n                                        props.setAnswer(cont);\n                                    }}\n                                />\n                            );\n                        }\n                        return (\n                            <tr key={cont}>\n                                <th scope=\"col\">{check_box}</th>\n\n                                <th scope=\"col\" className=\"left\">\n                                    {cont}\n                                </th>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nfunction Answer_type2(props) {\n    const answer_data = props.quiz[6].split(\",\");\n    const pattern = answer_data[0];\n    const example = answer_data[1];\n    const [error_collect, SetError_Collect] = useState(true);\n    useEffect(() => {\n        console.log(props.quiz);\n        console.log(pattern);\n        console.log(example);\n    }, []);\n\n    //正規表現のエラー表示\n    const handle_Test_pattern = (event, target_set) => {\n        const value = event.target.value;\n\n        console.log(pattern);\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\n        if (!new RegExp(pattern).test(value)) {\n            target_set(true);\n            console.log(\"errr\");\n        } else {\n            target_set(false);\n        }\n    };\n\n    return (\n        <>\n            <a>入力形式</a>\n\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    正解を入力\n                    <br />\n                    <p>例:{example}</p>\n                    {/* 1行のみのフォームにしたい */}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={props.answer}\n                        onChange={(event) => {\n                            handle_Test_pattern(event, SetError_Collect);\n                            props.setAnswer(event.target.value);\n                        }}\n                    />\n                    {error_collect ? \"エラー\" : \"OK\"}\n                </div>\n            </div>\n        </>\n    );\n}\n\nfunction Answer_quiz(props) {\n    const [answer, setAnswer] = useState();\n    const [now, setnow] = useState(null);\n    const [show, setShow] = useState(false);\n    const [content, setContent] = useState(\"\");\n    const [is_correct_show, setIs_correct_show] = useState(false);\n    let clean_up;\n\n    let Contract = new Contracts_MetaMask();\n    const id = useParams()[\"id\"];\n    console.log(id);\n    console.log(\"解答の最大数とこれまでに回答した人数\");\n    async function getCorrectLimitAndCorrectCount(id) {\n        return (await Contract.get_respondentCount_and_respondentLimit(id));\n    }\n\n    console.log(getCorrectLimitAndCorrectCount(id));\n\n    const [quiz, setQuiz] = useState(null);\n    const [simple_quiz, setSimple_quiz] = useState(null);\n\n    const get_quiz = async () => {\n        setQuiz(await Contract.get_quiz(id));\n        setSimple_quiz(await Contract.get_quiz_simple(id));\n    };\n\n    const convertFullWidthNumbersToHalf = (()=>{\n        // 全角数字と半角数字の差分を計算\n        const diff = \"０\".charCodeAt(0) - \"0\".charCodeAt(0);\n\n            // 置換関数を返す\n        return text => text.replace(\n                    /[０-９]/g\n                    ,m=>String.fromCharCode( m.charCodeAt(0) - diff )\n        ); \n    })();\n\n    const create_answer = async () => {\n        if (quiz[15] == true){\n            setIs_correct_show(true);\n            return;\n        }\n        if (parseInt(quiz[8]).toString() <= now) {\n            const res = Contract.create_answer(id, convertFullWidthNumbersToHalf(answer), setShow, setContent);\n        } else {\n            alert(\"まだ回答開始時間になっていません\");\n        }\n    };\n\n    \n\n    useEffect(() => {\n        get_quiz();\n        setnow(Math.floor(new Date().getTime() / 1000));\n    }, []);\n\n    if (quiz && simple_quiz) {\n        // console.log(quiz)\n        // console.log(simple_quiz)\n        return (\n            <>\n                <h3 style={{ margin: \"50px\" }}>{Number(simple_quiz[\"state\"]) == 0 ? \"初回の回答です。正解するとトークンがもらえます\" : Number(simple_quiz[\"state\"]) == 1 ? \"初回の回答で間違えています。正解してもトークンはもらえません\" : Number(simple_quiz[\"state\"]) == 2 ? \"正解しています\" : \"\"}</h3>\n                <div className=\"container\" style={{ \"text-align\": \"left\", \"margin-bottom\": \"50px\" }}>\n                    <h2>{quiz[2]}</h2>\n                    <br />\n                    <a style={{ \"white-space\": \"pre-wrap\", \"font-size\": \"14px\", \"line-height\": \"1\" }}>\n                        <br />\n                        {quiz[3]}\n                    </a>\n                    <br />\n                    <br />\n                    <a>出題者:{quiz[1]}</a>\n                    <br />\n                    <br />\n\n                    <div data-color-mode=\"light\" className=\"left\" style={{ \"text-align\": \"left\" }}>\n                        <MDEditor.Markdown source={quiz[5]} />\n                    </div>\n\n                    {(() => {\n                        if (Number(quiz[13]) == 0) {\n                            return <Answer_type1 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\n                        }\n                    })()}\n                    {(() => {\n                        if (Number(quiz[13]) == 1) {\n                            return <Answer_type2 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\n                        }\n                    })()}\n\n                    <div class=\"d-flex justify-content-end\">\n                        <Button variant=\"primary\" onClick={create_answer}>\n                            回答\n                        </Button>\n                    </div>\n                    {Number(quiz[13])}<br />\n                    <Show_correct cont={is_correct_show} answer={quiz[14]}/>\n                </div>\n                <Wait_Modal showFlag={show} content={content} />\n            </>\n        );\n    } else {\n        <></>;\n    }\n}\nexport default Answer_quiz;","import React, {useState, useEffect} from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nfunction Add_students(props) {\n    const [addStudent, setAddStudent] = useState(\"\");\n    const [addStudent_list, setAddStudent_list] = useState([]);\n\n    function add_student() {\n        console.log(addStudent_list);\n        props.cont.add_student(addStudent_list);\n    }\n    //addstudentが更新されたら実行\n    useEffect(() => {\n        setAddStudent_list(addStudent.split(\"\\n\"));\n        console.log(addStudent_list);\n    }, [addStudent]);\n\n    return (\n        <div className=\"mypage\">\n            <div className=\"add_student\">\n                追加する学生のアドレスを入力してください\n                <Form.Group className=\"mb-3\" style={{textAlign: \"left\"}}>\n                    <Form.Label>生徒のアドレスを入力して下さい</Form.Label>\n                    <Form.Control as=\"textarea\" rows={addStudent.split(\"\\n\").length + 3} value={addStudent} onChange={(event) => setAddStudent(event.target.value)} />\n                </Form.Group>\n                {addStudent_list.map((item, index) => {\n                    return <div key={index}>{item}</div>;\n                })}\n                <Button variant=\"primary\" onClick={() => add_student()} style={{marginTop: \"20px\"}}>\n                    生徒をこのコントラクトに追加する\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default Add_students;\n","import React, {useState, useEffect} from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nfunction Add_teacher(props) {\n    const [addteacher, setAddTeacher] = useState(\"\");\n    const [teachers, setTeachers] = useState([]);\n\n    function add_teacher() {\n        props.cont.add_teacher(addteacher);\n    }\n    useEffect(() => {\n        props.cont.get_teachers().then((result) => {\n            //console.log(result);\n            setTeachers(result);\n        });\n    }, []);\n\n    return (\n        <>\n            <div className=\"mypage\">\n                <div className=\"add_student\">\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"form_titile\" style={{textAlign: \"left\"}}>\n                            <Form.Label> 追加する教員orTAのアドレスを入力してください(1人ずつ)</Form.Label>\n                            <Form.Control type=\"text\" value={addteacher} onChange={(event) => setAddTeacher(event.target.value)} />\n                        </Form.Group>\n                    </Form>\n\n                    <Button variant=\"primary\" onClick={() => add_teacher()} style={{marginTop: \"20px\"}}>\n                        教員orTAをこのコントラクトに追加する\n                    </Button>\n                </div>\n            </div>\n            <div>\n                <h5>教員orTAの一覧</h5>\n                {teachers.map((item, index) => {\n                    return <div key={index}>{item}</div>;\n                })}\n            </div>\n        </>\n    );\n}\n\nexport default Add_teacher;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Contracts_MetaMask } from \"../../../contract/contracts\";\n\nfunction getCurrentDateTime() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0'); // 月は0から始まるため+1し、2桁にパディング\n    const day = String(now.getDate()).padStart(2, '0'); // 日を2桁にパディング\n    const hours = String(now.getHours()).padStart(2, '0'); // 時を2桁にパディング\n    const minutes = String(now.getMinutes()).padStart(2, '0'); // 分を2桁にパディング\n    const seconds = String(now.getSeconds()).padStart(2, '0'); // 秒を2桁にパディング\n\n    const formattedDateTime = `${year}${month}${day}${hours}${minutes}${seconds}`;\n    return formattedDateTime;\n}\n\nfunction Create_csvlink(props) {\n    return (\n        <div>\n            <div><CSVLink filename={`students_data_${getCurrentDateTime()}.csv`} variant=\"primary\" data={props.cont[0]}>こちらから学生の成績データをダウンロード</CSVLink></div>\n            <div><CSVLink filename={`quizs_data_${getCurrentDateTime()}.csv`} variant=\"primary\" data={props.cont[1]}>こちらから小テストの統計データをダウンロード</CSVLink></div>\n        </div>\n    );\n\n}\n\nfunction View_result(props) {\n\n    let contract = new Contracts_MetaMask();\n    const [results, setResults] = useState([]);\n    const [data_for_survey_users, setData_for_survey_users] = useState(null);\n    const [data_for_survey_quizs, setData_for_survey_quizs] = useState(null);\n    const [usersData, setUsersData] = useState(null);\n    const [quizsData, setQuizsData] = useState(null);\n    const [csvdownloader, setCsvdownloader] = useState(false);\n\n    const handle_export_csv = () => {\n        //console.log(data_for_survey_users);\n\n        const users_data = [\n            Object.keys(data_for_survey_users[0])\n        ]\n        for (let i = 0; i < data_for_survey_users.length; i++) {\n            users_data.push([data_for_survey_users[i].user, Number(data_for_survey_users[i].create_quiz_count).toString(), (Number(data_for_survey_users[i].result) / (10 ** 18)).toString(), (Number(data_for_survey_users[i].answer_count).toString())]);\n        }\n\n        const quizs_data = [\n            Object.keys(data_for_survey_quizs[0])\n        ]\n        for (let i = 0; i < data_for_survey_quizs.length; i++) {\n            quizs_data.push([(Number(data_for_survey_quizs[i].reward) / (10 ** 18)).toString(), (Number(data_for_survey_quizs[i].respondent_count)).toString()]);\n        }\n\n        setUsersData(users_data);\n        setQuizsData(quizs_data);\n        setCsvdownloader(true);\n    }\n\n    async function get_data_for_survey() {\n        setData_for_survey_users(await contract.get_data_for_survey_users());\n        setData_for_survey_quizs(await contract.get_data_for_survey_quizs());\n    }\n\n    //初回のみ実行\n    useEffect(() => {\n\n        get_data_for_survey();\n        props.cont.get_results().then((result) => {\n            console.log(result);\n            setResults(result);\n        });\n    }, []);\n\n    return (\n        <div className=\"mypage\">\n\n            <div class=\"row\">\n                <Button variant=\"primary\" onClick={() => handle_export_csv()}>成績データのCSVファイルの出力</Button>\n                {csvdownloader === true && <Create_csvlink cont={[usersData, quizsData]} />}\n            </div>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>address</th>\n                        <th>得点</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {results.map((item, index) => {\n                        return (\n                            <tr>\n                                <td>{index + 1}</td>\n                                <td>{item.student}</td>\n                                <td>{Number(item.result) / 10 ** 18}点</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default View_result;\n","import { id } from \"ethers/lib/utils\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Add_students from \"./components/add_student\";\nimport Add_teacher from \"./components/add_teacher\";\nimport View_result from \"./components/view_results\";\n//import { CSVLink, CSVDownload } from \"react-csv\";\nfunction Admin_page(props) {\n    const [component, setComponent] = useState(\"Add_students\");\n    const [isteacher, setisteacher] = useState(null);\n    /*\n    const [students, setStudents] = useState(null);\n    const [answer_hashs, setAnswer_hashs] = useState(null);\n    const [quiz_data, setQuiz_data] = useState(null);\n    const [csvdownloader, setCsvdownloader] = useState(false);\n    const quiz_id = 10;\n    \n\n    const handle_export_csv = () => {\n        let quiz_data = []\n        for (let i = 0; i < students.length; i++) {\n            quiz_data.push([students[i].toString(), (answer_hashs[students[i]]).toString()]);\n        }\n        setQuiz_data(quiz_data);\n        setCsvdownloader(true);\n    }\n\n    function Create_csvlink(props) {\n        return (\n            <div>\n                <div><CSVLink filename={`quiz_answers${props.cont[1]}.csv`} variant=\"primary\" data={props.cont[0]}>こちらから学生の成績データをダウンロード</CSVLink></div>\n            </div>\n        );\n\n    }\n    */\n\n    const handleClick = (event) => {\n        const { name } = event.target;\n        console.log(name);\n        setComponent(name);\n    };\n\n    useEffect(() => {\n        async function is_teacher() {\n            setisteacher(await props.cont.isTeacher());\n        }\n        /*\n        async function get_student_list() {\n            setStudents(await props.cont.get_student_list());\n        }\n        */\n\n        is_teacher();\n        //get_student_list();\n    }, []);\n\n    /*\n    useEffect(() => {\n        async function answer_hashs() {\n            setAnswer_hashs(await props.cont.get_students_answer_hash_list(students, quiz_id));\n        }\n        answer_hashs();\n    }, [students]);\n    */\n\n    //console.log(students);\n    //console.log(answer_hashs);\n    if (isteacher) {\n        return (\n            <div style={{ width: \"70%\", margin: \"0 auto\" }}>\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\n                    <button type=\"button\" name=\"Add_students\" className=\"btn btn-primary\" onClick={handleClick}>\n                        生徒を追加\n                    </button>\n                </div>\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\n                    <button type=\"button\" name=\"Add_teacher\" className=\"btn btn-primary\" onClick={handleClick}>\n                        教員orTAを追加\n                    </button>\n                </div>\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\n                    <button type=\"button\" name=\"View_result\" className=\"btn btn-primary\" onClick={handleClick}>\n                        生徒の成績を閲覧\n                    </button>\n                </div>\n\n                {/* name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect}/ */}\n                {component === \"Add_students\" && <Add_students cont={props.cont} />}\n                {component === \"Add_teacher\" && <Add_teacher cont={props.cont} />}\n                {component === \"View_result\" && <View_result cont={props.cont} />}\n                {/*\n                {answer_hashs ? <Button variant=\"primary\" onClick={() => handle_export_csv()}>quiz_id[{quiz_id}]のCSVファイルの出力</Button> : \"\"}\n                {csvdownloader === true && <Create_csvlink cont={[quiz_data, quiz_id]} />}\n                */}\n            </div>\n        );\n    } else {\n        return (<></>);\n    }\n}\n\nexport default Admin_page;\n","import { useEffect, useState } from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport Modal from \"./Modal\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./quiz_simple.css\";\nimport { Contracts_MetaMask } from \"../../../contract/contracts\";\n\nfunction Time_diff(props) {\n    function convertSecondsToHours(secondsLimit, secondsStart) {\n        let isBeforeStartline = false;\n\n        const date1 = new Date(); // 1つ目のDateオブジェクト\n        const date2 = new Date(secondsLimit * 1000); // 2つ目のDateオブジェクト\n        const date3 = new Date(secondsStart * 1000);\n\n        const epochTime1 = Math.floor(date1.getTime() / 1000); // 現在時刻を秒単位のエポック時間に変換\n        const epochTime2 = Math.floor(date2.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\n        const epochTime3 = Math.floor(date3.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\n        // console.log(\"/////\");\n        // console.log(date2,seconds);\n        // console.log( epochTime1 , epochTime2,epochTime1 - epochTime2); // タイムリミットと現在時刻の差を表示\n        // console.log(date1.toISOString());\n        // console.log(date2.toISOString());\n        // console.log(\"////\")\n        console.log(epochTime1);\n\n        let elapsedTime = 0;\n\n        if (epochTime1 < epochTime3) {\n            elapsedTime = Math.floor(Math.abs(epochTime3 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\n            elapsedTime = new Date(elapsedTime * 1000);\n            isBeforeStartline = true;\n        } else {\n            elapsedTime = Math.floor(Math.abs(epochTime2 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\n            elapsedTime = new Date(elapsedTime * 1000);\n        }\n\n        //console.log(elapsedTime);\n\n        const labels = [\"年\", \"ヶ月\", \"日\", \"時間\", \"分\", \"秒\"];\n        let date = [];\n        date.push(elapsedTime.getUTCFullYear() - 1970);\n        date.push(elapsedTime.getUTCMonth());\n        date.push(elapsedTime.getUTCDate() - 1);\n        date.push(elapsedTime.getUTCHours());\n        date.push(elapsedTime.getUTCMinutes());\n        date.push(elapsedTime.getUTCSeconds());\n        let res = \"\";\n        let count = 0;\n        let i = 0;\n\n        for (i = 0; i <= date.length; i++) {\n            //console.log(date[i]);\n            if (date[i] != 0) {\n                //count =i;\n                break;\n            }\n        }\n        for (i; i < date.length; i++) {\n            res += date[i].toString() + labels[i];\n        }\n        if (isBeforeStartline) {\n            return \"回答開始時間まで\" + res;\n        } else {\n            if (epochTime2 - epochTime1 > 0) {\n                return \"締め切りまで \" + res;\n            } else {\n                return \"締切終了\";\n            }\n        }\n    }\n\n    //console.log(parseInt(props.limit[\"_hex\"]));\n    return (\n        <div>\n            {/* {now}<br/>\n            {targetDate}<br/> */}\n            {convertSecondsToHours(parseInt(props.limit), parseInt(props.start))}\n        </div>\n    );\n}\n\nfunction Simple_quiz(props) {\n    let contract = new Contracts_MetaMask();\n    const search = useLocation().search;\n\n    const [show, setShow] = useState(false);\n    const [is_payment, setIs_payment] = useState(false);\n\n    console.log(props.quiz);\n    console.log(props.quiz[8]);\n    console.log(props.quiz[9]);\n\n    async function get_is_payment(id){\n        setIs_payment(await contract.get_is_payment(id));\n    }\n\n    useEffect(() => {\n        console.log(\"show\", show);\n    }, [show]);\n\n    useEffect(() =>{\n        get_is_payment(props.quiz[0]);\n    }, []);\n    console.log(is_payment);\n\n    return (\n        <>\n\n            <div onClick={() => setShow(true)}>\n                <div className={`quiz_card ${is_payment ? 'border border-danger' : '' }`}>\n                    <Link to={{ pathname: \"/answer_quiz/\" + Number(props.quiz[0]), state: { back_page: 0 } }} style={{ color: \"black\", textDecoration: \"none\" }}>\n                        <div className=\"row quiz_card_1\">\n                            <div className=\"col-2\">\n                                <img src={props.quiz[4]} className=\"img-fluid\"></img>\n                            </div>\n                            <div className=\"col-10\" style={{ textAlign: \"left\" }}>\n                                <div className=\"row h-20\">\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[2]}</div>\n                                </div>\n                                <div className=\"row h-80\" style={{ whiteSpace: \"pre-wrap\", fontSize: \"14px\", lineHeight: \"1\" }}>\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[3]}</div>\n                                </div>\n                                <div className=\"row h-20\" style={{ fontSize: \"14px\" }}>\n                                    <Time_diff start={Number(props.quiz[8])} limit={Number(props.quiz[9])} />\n                                </div>\n                                <div className=\"d-flex\" style={{ fontSize: \"14px\", lineHeight: \"1\" }}>\n\n\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">報酬</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[10]) / (10 ** 18)}FLT\n                                        </div>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">正解数</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[11])}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">上限</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[12])}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <div className=\"col\">状態</div>\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\n                                            {Number(props.quiz[13]) == 0 ? \"未回答\" : Number(props.quiz[13]) == 1 ? \"不正解\" : Number(props.quiz[13]) == 2 ? \"正解\" : \"\"}\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n                    <div style={{ textAlign: \"right\" }}>\n                        <Button as={Link} to={`/edit_quiz/${Number(props.quiz[0])}`} state={{ args: [Number(props.quiz[0]), props.quiz[1], props.quiz[2], props.quiz[3], props.quiz[4], props.quiz[5], Number(props.quiz[6]), props.quiz[7], Number(props.quiz[8]), Number(props.quiz[9]), Number(props.quiz[10]), Number(props.quiz[11]), Number(props.quiz[12]), Number(props.quiz[13])] }} variant=\"primary\" style={{ marginTop: \"20px\" }}>\n                            編集\n                        </Button>\n                        <Button as={Link} to={`/investment_page/${Number(props.quiz[0])}`} state={{ args: [Number(props.quiz[0])] }} variant=\"primary\" style={{ marginTop: \"20px\", marginLeft: \"10px\", marginRight: \"0px\" }}>\n                            報酬の追加\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Simple_quiz;\n","import Form from \"react-bootstrap/Form\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\nimport { resolvePath, useLocation } from \"react-router-dom\";\nimport Simple_quiz from \"./quiz_simple\";\n\nimport { Link } from \"react-router-dom\";\nfunction Quiz_list(props) {\n    const location = useLocation();\n    //画面を満たす個数を計算して、add_numに代入\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\n\n    //表示するクイズのリスト\n    // const [quiz_list,Set_quiz_list] =useState([]);\n\n    const quiz_list = props.quiz_list;\n    const Set_quiz_list = props.Set_quiz_list;\n\n    //クイズのリストを取得\n    const get_quiz_list = async (now) => {\n        //追加分のクイズ用のリスト\n        let add_quiz_list = [];\n\n        //クイズの総数を超えていたら\n        if (now - add_num.current < 0) {\n            //now_numからquiz_numまでのクイズを取得\n            add_quiz_list = await props.cont.get_quiz_all_data_list(now, 0);\n            //now_numを0にする\n            props.now_numRef.current = 0;\n        } else {\n            //クイズの総数を超えていなかったら\n            //now_numからnow_num+add_numまでのクイズを取得\n            add_quiz_list = await props.cont.get_quiz_all_data_list(now, now - add_num.current);\n            console.log(add_quiz_list);\n            //now_numをnow_num+add_numにする\n            props.now_numRef.current = now - add_num.current;\n        }\n        //new_quiz_listをmapで展開して、quiz_listに追加\n        let now_quiz_list = [];\n\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\n        add_quiz_list.map((quiz) => {\n            console.log(quiz)\n            now_quiz_list.push(<Simple_quiz quiz={quiz} />); //DOMとして追加\n        });\n\n        //quiz_listにnow_quiz_listを追加\n        //console.log([...quiz_list, ...now_quiz_list]);\n        Set_quiz_list((quiz_list) => [...quiz_list, ...now_quiz_list]);\n    };\n\n    const options = {\n        root: null, // ビューポートをルートとする\n        rootMargin: \"-10px\", // ビューポートに対するマージン\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n        for (const entry of entries) {\n            if (entry.isIntersecting) {\n                // ターゲット要素がビューポートに入った時の処理\n                console.log(\"ターゲット要素がビューポートに入りました。\");\n                get_quiz_list(props.now_numRef.current);\n            } else {\n                // ターゲット要素がビューポートから出た時の処理\n                console.log(\"ターゲット要素がビューポートから出ました。\");\n            }\n        }\n    }, options);\n\n    useEffect(() => {\n        console.log(location.search);\n\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\n        if (targetElement) {\n            observer.observe(targetElement); // ターゲット要素をobserve\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\n            if (targetElement.isIntersecting) {\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\n                get_quiz_list(props.now_numRef.current);\n            }\n        }\n        return () => {\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\n        };\n\n        //パラメータを取得\n    }, []); // []を指定して初期状態のみで実行されるようにする\n}\nexport default Quiz_list;\n","import { Contracts_MetaMask } from \"../../contract/contracts\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\nimport { resolvePath, useParams } from \"react-router-dom\";\nimport Simple_quiz from \"./components/quiz_simple\";\nimport Quiz_list from \"./components/quiz_list\";\nimport { Link } from \"react-router-dom\";\n\nfunction Edit_list_top(props) {\n    //クイズのコントラクト\n    let cont = new Contracts_MetaMask();\n\n    //現在表示している個数を保持するref\n    const now_numRef = useRef(0); //保存\n    const [isTeacher, setIsTeacher] = useState(false);\n    //クイズの総数\n    const [quiz_sum, Set_quiz_sum] = useState(null); //保存\n\n    //表示するクイズのリスト\n    const [quiz_list, Set_quiz_list] = useState([]); //保存\n    //１回の更新で追加で表示する個数\n    const [add_num, Set_add_num] = useState(7);\n    // コンテナのrefを作成\n    const containerRef = useRef(null);\n\n    const callback = (entries, observer) => {\n        entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n                // ターゲットの<div>が画面に表示された場合に実行される関数\n                console.log(\"Target div is visible on the screen!\");\n                // ここに実行したい関数を記述\n\n                // console.log(\"///////\",now_num);\n            }\n        });\n    };\n\n    useEffect(() => {\n        cont.get_quiz_lenght().then((data) => {\n            // Promise オブジェクトが解決された後の処理を記述\n            console.log(Number(data));\n            let now = parseInt(Number(data));\n            Set_quiz_sum(now);\n            now_numRef.current = now;\n        });\n        const set_is_teacher = async () => {\n            setIsTeacher(await cont.isTeacher());\n        };\n        set_is_teacher();\n    }, []);\n\n    const targetRef = useRef(null); // ターゲット要素のrefを作成\n    console.log(\"ユーザーのisTeacherステータス\");\n    console.log(isTeacher);\n    if (isTeacher) {\n        if (quiz_sum != null) {\n            return (\n                <>\n                    {/* スクロールを監視するコンポーネント */}\n                    <Quiz_list cont={cont} add_num={add_num} Set_add_num={Set_add_num} quiz_sum={quiz_sum} Set_quiz_sum={Set_quiz_sum} quiz_list={quiz_list} Set_quiz_list={Set_quiz_list} targetRef={targetRef} now_numRef={now_numRef} />\n\n                    {/* */}\n                    {quiz_list.map((quiz, index) => {\n                        if (index !== quiz_list.length - add_num) {\n                            return <>{quiz_list[index]}</>;\n                        }\n                    })}\n                    <div ref={targetRef}>\n                        {/* ターゲット要素aの内容 */}\n                        now_loading\n                    </div>\n                </>\n            );\n        } else {\n            return <></>;\n        }\n    } else {\n        return <></>;\n    }\n}\nexport default Edit_list_top;\n","import { Contracts_MetaMask } from \"../../contract/contracts\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport MDEditor from \"@uiw/react-md-editor\";\nimport Answer_select from \"./components/answer_select\";\nimport Button from \"react-bootstrap/Button\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Wait_Modal from \"../../contract/wait_Modal\";\n\nconst { ethereum } = window;\nconst mkdStr = \"\";\n\nfunction Edit_quiz() {\n    const [id, setId] = useState(useParams()[\"id\"]);\n    const [owner, setOwner] = useState(null);\n\n    const [useing_address, Set_useing_address] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [explanation, setExplanation] = useState(\"\");\n    const [thumbnail_url, setThumbnail_url] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [reply_startline, setReply_startline] = useState(\n        new Date()\n            .toLocaleString(\"ja-JP\", { timeZone: \"Asia/Tokyo\" })\n            .replace(/[/]/g, \"-\")\n            .replace(/\\s(\\d):/, \" 0$1:\"),\n    );\n    const [reply_deadline, setReply_deadline] = useState(getLocalizedDateTimeString(addDays(new Date(), 0)));\n    let Contract = new Contracts_MetaMask();\n\n    const [now, setnow] = useState(null);\n    const [show, setShow] = useState(false);\n\n    const [isteacher, setisteacher] = useState(null);\n\n    const location = useLocation();\n    const quiz = location.state.args;\n\n    const edit_quiz = async () => {\n        console.log(id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline);\n\n        console.log(new Date(reply_startline).getTime(), new Date(reply_deadline).getTime());\n        if (new Date(reply_startline).getTime() < new Date(reply_deadline).getTime()) {\n            Contract.edit_quiz(id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline, setShow);\n        } else {\n            alert(\"回答開始日時を回答締切日時より前に設定してください\");\n        }\n    };\n    function getLocalizedDateTimeString(now = new Date()) {\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const day = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n\n        const formatter = new Intl.DateTimeFormat(\"ja-JP\", {\n            timeZone: \"Asia/Tokyo\",\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: false,\n        });\n\n        const localizedDateTimeString = formatter\n            .format(now)\n            .replace(/\\u200E|\\u200F/g, \"\")\n            .replace(/\\//g, \"-\")\n            .replace(/ /, \"T\");\n\n        return localizedDateTimeString;\n    }\n    function addDays(date, days) {\n        date.setDate(date.getDate() + days);\n        return date;\n    }\n    function date_format(date) {\n        return date.split(\" \").join(\"T\").slice(0, date.length - 3);\n    }\n\n    async function is_teacher() {\n        setisteacher(await Contract.isTeacher());\n    }\n\n    //初回のみ実行\n    useEffect(() => {\n        // let now = new Date();\n        // const diff_time = new Date(now + 100);\n        // setReply_deadline(addDays(now, 5));\n        console.log(id);\n        setOwner(quiz[1]);\n        setTitle(quiz[2]);\n        setExplanation(quiz[3]);\n        setThumbnail_url(quiz[4]);\n        setContent(quiz[5]);\n        setReply_startline(getLocalizedDateTimeString(new Date(quiz[8] * 1000)));\n        setReply_deadline(getLocalizedDateTimeString(new Date(quiz[9] * 1000)));\n        setnow(getLocalizedDateTimeString());\n        is_teacher();\n        console.log(quiz)\n        // console.log(now);\n        // console.log(new Date().toISOString().slice(0, 16));\n    }, []);\n    console.log(now);\n    console.log(reply_deadline);\n    console.log(reply_startline);\n\n    if (isteacher) {\n        return (\n            <div>\n                <div className=\"row mb-5\">\n                    <div className=\"col-2\" />\n                    <div className=\"col-8\">\n                        <Form>\n                            <Form.Group className=\"mb-3\" controlId=\"form_titile\" style={{ textAlign: \"left\" }}>\n                                <Form.Label>タイトル</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Title\" value={title} onChange={(event) => setTitle(event.target.value)} />\n                            </Form.Group>\n                        </Form>\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>説明</Form.Label>\n                            <Form.Control as=\"textarea\" rows={explanation.split(\"\\n\").length + 3} value={explanation} onChange={(event) => setExplanation(event.target.value)} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>サムネイル</Form.Label>\n                            <Form.Control type=\"url\" value={thumbnail_url} onChange={(event) => setThumbnail_url(event.target.value)} />\n                        </Form.Group>\n                        <img src={thumbnail_url} width=\"200\" />\n                        <br />\n\n                        <Form.Group className=\"mb-3\" data-color-mode=\"light\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>内容</Form.Label>\n                            <MDEditor height={500} value={content} onChange={setContent} />\n                        </Form.Group>\n\n                        {/*\n                        <Answer_select name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect} setAnswer_type={setAnswer_type} answer_type={answer_type} />\n                        */}\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>回答開始日時</Form.Label>\n                            <Form.Control\n                                type=\"datetime-local\"\n                                defaultValue={reply_startline}\n                                //value={reply_startline}\n                                //min={reply_startline}\n                                onChange={(event) => setReply_startline(new Date(event.target.value))}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\n                            <Form.Label>回答締切日時</Form.Label>\n                            <Form.Control\n                                type=\"datetime-local\"\n                                defaultValue={reply_deadline}\n                                //value={reply_deadline}\n                                //min={reply_deadline}\n                                onChange={(event) => setReply_deadline(new Date(event.target.value))}\n                            />\n                        </Form.Group>\n\n\n                        <div style={{ textAlign: \"right\" }}>\n                            <Button variant=\"primary\" onClick={() => edit_quiz()} style={{ marginTop: \"20px\" }}>\n                                クイズをの編集を実行\n                            </Button>\n                        </div>\n                    </div>\n                    <div className=\"col-2\" />\n                </div>\n\n                <Wait_Modal showFlag={show} />\n            </div>\n        );\n    } else {\n        return (<></>);\n    }\n\n\n\n\n\n}\n\n{/*\nconst { ethereum } = window;\nconst mkdStr = \"\";\n\nfunction Create_quiz() {\n    let Contract = new Contracts_MetaMask();\n    const [id, setId] = useState(useParams()[\"id\"]);\n    const [quiz, setQuiz] = useState(null);\n    console.log(id);\n\n    useEffect(() => {\n        // let now = new Date();\n        // const diff_time = new Date(now + 100);\n        // setReply_deadline(addDays(now, 5));\n        const get_contract = async () => {\n            setQuiz(await Contract.get_quiz_all_data(id));\n        };\n        get_contract(id);\n        console.log(quiz);\n        // console.log(now);\n        // console.log(new Date().toISOString().slice(0, 16));\n    }, []);\n}\n*/}\n\nexport default Edit_quiz;","import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Contracts_MetaMask } from \"../../contract/contracts\";\r\n\r\nfunction Investment_to_quiz() {\r\n    const location = useLocation();\r\n\r\n    const [id, setId] = useState(location.state.args[0]);\r\n    const [amount, setAmount] = useState(0);\r\n    const [isNotPayingOut, setIsNotPayingOut] = useState(\"true\");\r\n    const [numOfStudent, setNumOfStudent] = useState(0);\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [isteacher, setisteacher] = useState(null);\r\n    const [isNotAddingReward, setIsNotAddingReward] = useState(\"true\");\r\n    const [students, setStudents] = useState(null);\r\n\r\n    let Contract = new Contracts_MetaMask();\r\n\r\n    const handleOptionChange = (event) => {\r\n        setIsNotPayingOut(event.target.value);\r\n        console.log(isNotPayingOut);\r\n\r\n    };\r\n\r\n    const adding_reward = (event) => {\r\n        setIsNotAddingReward(event.target.value);\r\n        console.log(isNotAddingReward);\r\n\r\n    };\r\n\r\n    async function get_contract() {\r\n        setNumOfStudent((await Contract.get_num_of_students()) + 30);\r\n    }\r\n\r\n    async function is_teacher() {\r\n        setisteacher(await Contract.isTeacher());\r\n    }\r\n    async function get_students() {\r\n        setStudents(await Contract.get_student_list());\r\n    }\r\n\r\n    get_contract();\r\n    is_teacher();\r\n\r\n    const convertFullWidthNumbersToHalf = (() => {\r\n        // 全角数字と半角数字の差分を計算\r\n        const diff = \"０\".charCodeAt(0) - \"0\".charCodeAt(0);\r\n\r\n        // 置換関数を返す\r\n        return text => text.replace(\r\n            /[０-９]/g\r\n            , m => String.fromCharCode(m.charCodeAt(0) - diff)\r\n        );\r\n    })();\r\n\r\n    const investment_to_quiz = async () => {\r\n        if ((answer == \"\" && isNotPayingOut == \"false\") == false) {\r\n            Contract.investment_to_quiz(id, amount, convertFullWidthNumbersToHalf(answer), isNotPayingOut, numOfStudent, isNotAddingReward, students);\r\n        } else {\r\n            alert(\"答えを入力してください\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        get_students();\r\n    }, []);\r\n\r\n    console.log(isNotPayingOut);\r\n    console.log(students);\r\n\r\n\r\n\r\n    if (isteacher) {\r\n        return (\r\n            <div className=\"col mb-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-10\">\r\n                        このテストのIDは{id}です\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                        以下に追加する報酬(FLT)の量を指定してください<br />\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={amount}\r\n                            onChange={(event) => {\r\n                                setAmount(event.target.value);\r\n                            }}\r\n                        />\r\n                        正答した生徒一人ひとりに与えられるFLTトークン量： {amount}FLT\r\n                        <br />\r\n                        あなたから払いだされるFLTトークン量： {amount * numOfStudent}FLT\r\n\r\n                    </div>\r\n                    <div className=\"col-10\" style={{ marginTop: \"20px\" }}>\r\n                        以下に確定した答えを入力してください\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={answer}\r\n                            onChange={(event) => {\r\n                                setAnswer(event.target.value);\r\n                            }}\r\n                        />\r\n\r\n                    </div>\r\n                    <br />\r\n                    以下は、解答を確定して報酬の払い出しを行うか行わないかの選択です。\r\n                    <div className=\"col-10\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"true\"\r\n                                onChange={handleOptionChange}\r\n                                checked={isNotPayingOut === \"true\"}\r\n                            />\r\n                            まだ報酬の払い出しを行わない\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"false\"\r\n                                onChange={handleOptionChange}\r\n                                checked={isNotPayingOut === \"false\"}\r\n                            />\r\n                            解答を確定して報酬を払い出す\r\n                        </label>\r\n                    </div>\r\n                    <br />\r\n                    この問題は発表されましたか？発表されていれば発表者に二倍のトークンを支払います\r\n                    <div className=\"col-10\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"true\"\r\n                                onChange={adding_reward}\r\n                                checked={isNotAddingReward === \"true\"}\r\n                            />\r\n                            発表されていない\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"false\"\r\n                                onChange={adding_reward}\r\n                                checked={isNotAddingReward === \"false\"}\r\n                            />発表されている\r\n                        </label>\r\n                    </div>\r\n\r\n                    <Button className=\"col-10\" variant=\"primary\" onClick={() => investment_to_quiz()} style={{ marginTop: \"20px\" }}>\r\n                        報酬の追加、報酬の払い出しを実行\r\n                    </Button>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default Investment_to_quiz;","import { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Nav_menu from \"./pages/navbar/navbar\";\nimport Login from \"./contract/login\";\nimport User_page from \"./pages/user_page/user_page\";\nimport Create_quiz from \"./pages/create_quiz/create_quiz\";\nimport List_quiz from \"./pages/list_quiz/list_quiz_top\";\nimport Answer_quiz from \"./pages/answer_quiz/answer_quiz\";\nimport Admin_page from \"./pages/admin_page/admin\";\nimport Edit_list from \"./pages/edit_list/edit_list_top\";\nimport Edit_quiz from \"./pages/edit_quiz/edit_quiz\";\nimport Investment_page from \"./pages/investment_page/investment_page\";\nimport { Contracts_MetaMask } from \"./contract/contracts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n    const cont = new Contracts_MetaMask();\n    const is_teacher = cont.isTeacher();\n\n    const homeUrl = process.env.PUBLIC_URL;\n    console.log(homeUrl);\n\n    return (\n        <div className=\"App\">\n            <body>\n                <div>\n                    <BrowserRouter basename={homeUrl}>\n                        <Routes>\n                            <Route path={\"/login\"} element={<Login url={\"login\"} cont={cont} />} />\n                        </Routes>\n                        <Routes>\n                            <Route path={\"/user_page/:address\"} element={<User_page url={\"user_page\"} cont={cont} />} />\n                        </Routes>\n                        <Routes>\n                            <Route path={\"/create_quiz\"} element={<Create_quiz url={\"create_quiz\"} cont={cont} />} />\n                        </Routes>\n                        <Routes>\n                            <Route path={\"/list_quiz\"} element={<List_quiz url={\"list_quiz\"} cont={cont} />} />\n                        </Routes>\n                        <Routes>\n                            <Route path={\"/answer_quiz/:id\"} element={<Answer_quiz url={\"answer_quiz\"} cont={cont} />} />\n                            quiz_comp\n                        </Routes>\n                        <Routes>\n                            {/* <Route path={'/answer_quiz/:id'} element={<Answer_quiz url={'answer_quiz'} />} cont={cont} /> */}\n                            <Route path={\"/admin\"} element={<Admin_page url={\"admin\"} cont={cont} />} />\n                            {/*<Route path={\"/admin\"} element={ is_teacher ? <Admin_page url={\"admin\"} cont={cont} /> : <Navigate replace to=\"/list_quiz\" />}/>*/}\n                            quiz_comp\n                        </Routes>\n                        <Routes>\n                            <Route path={\"/edit_list\"} element={<Edit_list url={\"edit_list\"} cont={cont} />} />\n                        </Routes>\n                        <Routes>\n                            <Route path={\"/edit_quiz/:id\"} element={<Edit_quiz url={\"edit_quiz\"} cont={cont} />} />\n                            quiz_comp\n                        </Routes>\n                        <Routes>\n                            <Route path={\"/investment_page/:id\"} element={<Investment_page url={\"investment_page\"} cont={cont} />} />\n                            quiz_comp\n                        </Routes>\n                    </BrowserRouter>\n                </div>\n                <div>\n                    <Nav_menu cont={cont} home={homeUrl} />\n                </div>\n            </body>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}